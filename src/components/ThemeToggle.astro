---
const theme = {
	light: {
		label: 'Switch to dark mode',
		icon: 'üåô'
	},
	dark: {
		label: 'Switch to light mode',
		icon: '‚òÄÔ∏è'
	}
};
---

<button
	class="theme-toggle"
	aria-label={theme.light.label}
	title={theme.light.label}
>
	<span class="theme-toggle__icon" aria-hidden="true">{theme.light.icon}</span>
</button>

<style>
	.theme-toggle {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		padding: var(--spacing-sm);
		background: none;
		border: none;
		border-radius: 50%;
		cursor: pointer;
		transition: background-color 0.2s ease;
	}

	.theme-toggle:hover {
		background-color: rgba(var(--color-gray-light), 0.2);
	}

	.theme-toggle:focus {
		outline: 2px solid var(--color-primary);
		outline-offset: 2px;
	}

	.theme-toggle__icon {
		font-size: var(--font-size-lg);
		line-height: 1;
	}

	@media (prefers-color-scheme: dark) {
		.theme-toggle {
			background-color: rgba(var(--color-gray-dark), 0.2);
		}

		.theme-toggle:hover {
			background-color: rgba(var(--color-gray-dark), 0.4);
		}
	}
</style>

<script>
	// Get theme preference from localStorage or system preference
	const getThemePreference = (): 'light' | 'dark' => {
		const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;
		if (savedTheme) return savedTheme;
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};

	// Set theme
	const setTheme = (theme: 'light' | 'dark') => {
		document.documentElement.setAttribute('data-theme', theme);
		localStorage.setItem('theme', theme);
	};

	// Initialize theme
	const initTheme = () => {
		const theme = getThemePreference();
		setTheme(theme);
	};

	// Handle theme toggle
	const handleThemeToggle = () => {
		const currentTheme = document.documentElement.getAttribute('data-theme');
		const newTheme = currentTheme === 'light' ? 'dark' : 'light';
		setTheme(newTheme);
	};

	// Add event listeners
	document.addEventListener('DOMContentLoaded', () => {
		const themeToggle = document.querySelector('.theme-toggle');
		if (themeToggle) {
			themeToggle.addEventListener('click', handleThemeToggle);
		}
	});

	// Initialize theme on load
	initTheme();
</script> 