---
import type { CollectionEntry } from 'astro:content';
import { findRelatedPosts } from '../utils/tagProcessing';
import { calculateReadingTimeFromMarkdown } from '../utils/readingTime';

interface Props {
  currentPost?: CollectionEntry<'blog'>;
  allPosts?: CollectionEntry<'blog'>[];
}

const { currentPost, allPosts } = Astro.props;

// Find related posts if we have the necessary data
const relatedPosts = currentPost && allPosts 
  ? findRelatedPosts(currentPost, allPosts, 4)
  : [];

// Only show the component if we have related posts
const hasRelatedPosts = relatedPosts.length > 0;
---

{hasRelatedPosts && (
  <section class="related-posts mt-12 pt-8">
    <div class="space-y-6">
      {/* Header */}
      <div class="mb-6">
        <h2 class="text-2xl font-bold mb-3 text-[rgb(var(--color-text))]">
          üí° Continue Reading
        </h2>
        <p class="text-body-muted text-base leading-relaxed">
          Explore more writings that might resonate with your current journey
        </p>
      </div>
      
      {/* Related Posts List */}
      <ol class="post-list space-y-3">
        {relatedPosts.map((post, index) => {
          const readingTime = calculateReadingTimeFromMarkdown(post.body || '');
          return (
            <li class="post-item">
              <a href={`/p/${post.id}`} class="post-link group" data-post-slug={post.id}>
                <span class="post-number">{index + 1}.</span>
                <div class="post-content">
                  <span class="post-title">{post.data.title}</span>
                  {post.data.description && (
                    <span class="post-description">{post.data.description}</span>
                  )}
                </div>
                <div class="post-meta">
                  {readingTime && (
                    <span class="reading-time">{readingTime}</span>
                  )}
                  {post.data.featured && (
                    <span class="featured-badge">‚≠ê</span>
                  )}
                </div>
              </a>
            </li>
          );
        })}
      </ol>
      
      {/* Call to Action */}
      <div class="pt-2">
        <a 
          href="/"
          class="inline-flex items-center gap-2 text-[rgb(var(--color-accent))] hover:text-[rgb(var(--color-accent))]/80 hover:underline transition-colors font-medium"
        >
          <span>Browse All Writings</span>
          <span aria-hidden="true">‚Üí</span>
        </a>
      </div>
    </div>
  </section>
)}

<style>
  .related-posts {
    scroll-margin-top: 2rem;
  }
  
  /* Post list styling similar to Chapter component */
  .post-list {
    list-style: none;
    padding: 0;
  }
  
  .post-item {
    border-radius: 0.5rem;
    transition: all 0.2s ease;
  }
  
  .post-link {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 0.75rem;
    border-radius: 0.5rem;
    text-decoration: none;
    color: inherit;
    transition: all 0.2s ease;
  }
  
  .post-link:hover {
    background-color: rgb(var(--color-bg-alt));
    transform: translateX(0.25rem);
  }
  
  .post-number {
    font-weight: 600;
    color: rgb(var(--color-primary));
    min-width: 1.5rem;
    font-size: 0.875rem;
  }
  
  .post-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .post-title {
    font-weight: 600;
    color: rgb(var(--color-text));
    line-height: 1.4;
  }
  
  .post-description {
    font-size: 0.875rem;
    color: rgb(var(--color-text-muted));
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .post-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.75rem;
    color: rgb(var(--color-text-muted));
    white-space: nowrap;
  }
  
  .reading-time {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }
  
  .featured-badge {
    font-size: 0.875rem;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .post-link {
      padding: 0.5rem;
      gap: 0.5rem;
    }
    
    .post-number {
      min-width: 1.25rem;
      font-size: 0.8rem;
    }
    
    .post-description {
      -webkit-line-clamp: 1;
    }
  }
  
  /* Focus states for accessibility */
  .post-link:focus {
    outline: 2px solid rgb(var(--color-primary));
    outline-offset: 2px;
  }
  
  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .post-link,
    .post-item {
      transition: none !important;
    }
    
    .post-link:hover {
      transform: none !important;
    }
  }
</style> 
