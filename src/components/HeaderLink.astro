---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a 
	href={href} 
	class="group relative text-text dark:text-gray-light no-underline font-medium text-base md:text-lg py-2 transition-all duration-300 hover:text-primary dark:hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-background dark:focus:ring-offset-gray-dark rounded-lg after:content-[''] after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-primary after:scale-x-0 after:origin-right after:transition-transform after:duration-300 after:ease-out-cubic hover:after:scale-x-100 hover:after:origin-left aria-[current=page]:text-primary aria-[current=page]:after:scale-x-100 aria-[current=page]:font-semibold aria-[current=page]:after:bg-primary/80"
	aria-current={isActive ? 'page' : undefined}
>
	<span class="relative z-10">
		<slot />
	</span>
</a>

<style>
	:global(.ease-out-cubic) {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Enhanced typography for navigation links */
	a {
		font-family: var(--font-sans);
		letter-spacing: -0.01em;
		line-height: 1.5;
	}

	/* Remove any global underline styles that might conflict */
	:global(a) {
		text-decoration: none;
	}

	:global(a:hover) {
		text-decoration: none;
	}

	/* Enhanced focus states */
	a:focus-visible {
		outline-offset: 4px;
		transition: outline-offset 200ms ease-out;
	}

	/* Smooth hover transitions */
	a::after {
		transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1),
					background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Active state enhancements */
	a[aria-current="page"] {
		font-weight: 600;
		letter-spacing: -0.015em;
	}

	/* Dark mode optimizations */
	@media (prefers-color-scheme: dark) {
		a::after {
			background-color: var(--tw-color-primary-light);
		}
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		a,
		a::after {
			transition: none !important;
		}
	}
</style>
