---
import { SITE_TITLE } from '../consts';

interface Props {
  /**
   * The size variant of the logo
   */
  size?: 'sm' | 'md' | 'lg';
  
  /**
   * Additional classes to apply
   */
  class?: string;
}

const { size = 'md', class: className = '' } = Astro.props;

const sizeClasses = {
  sm: 'text-lg',
  md: 'text-xl',
  lg: 'text-2xl'
};
---

<a
  href="/"
  class:list={[
    'inline-flex items-center gap-2 font-serif font-bold tracking-tight text-text dark:text-text-dark hover:text-primary-500 dark:hover:text-primary-400 theme-transition',
    sizeClasses[size],
    className
  ]}
  aria-label={`${SITE_TITLE} - Home`}
>
  <span class="text-primary-500 dark:text-primary-400" aria-hidden="true">âš¡</span>
  <span>{SITE_TITLE}</span>
</a>

<style>
  .logo-svg {
    transform-origin: center;
    animation: logoEntrance var(--animation-duration-normal) var(--animation-easing-default) forwards;
  }

  @keyframes logoEntrance {
    0% {
      transform: scale(0.8) rotate(-10deg);
      opacity: 0;
    }
    100% {
      transform: scale(1) rotate(0);
      opacity: 1;
    }
  }

  /* Add subtle hover animation */
  a:hover .logo-svg {
    animation: logoHover var(--animation-duration-fast) var(--animation-easing-default) forwards;
  }

  @keyframes logoHover {
    0% {
      transform: scale(1) rotate(0);
    }
    50% {
      transform: scale(1.1) rotate(5deg);
    }
    100% {
      transform: scale(1) rotate(0);
    }
  }

  /* R2-D2 style spin animation */
  .logo-svg.r2d2-spin {
    animation: r2d2Spin var(--animation-duration-fast) linear infinite;
  }

  @keyframes r2d2Spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .logo-svg {
      animation: none;
    }
    a:hover .logo-svg {
      animation: none;
    }
    .logo-svg.r2d2-spin {
      animation: none;
    }
  }
</style>

<script>
  // Add scroll-based animation
  const logo = document.querySelector('.logo-svg') as SVGElement;
  let lastScrollY = window.scrollY;
  let ticking = false;
  let isSpinning = false;

  function updateLogoOnScroll() {
    if (logo) {
      const scrollDelta = window.scrollY - lastScrollY;
      const rotation = Math.min(Math.max(scrollDelta * 0.1, -5), 5); // Limit rotation to -5 to 5 degrees
      
      // Get footer position
      const footer = document.querySelector('footer');
      if (footer) {
        const footerTop = footer.getBoundingClientRect().top;
        const windowHeight = window.innerHeight;
        
        // Start spinning when footer is 300px from viewport bottom
        if (footerTop < windowHeight + 300 && !isSpinning) {
          logo.classList.add('r2d2-spin');
          isSpinning = true;
        } else if (footerTop >= windowHeight + 300 && isSpinning) {
          logo.classList.remove('r2d2-spin');
          isSpinning = false;
        }
      }

      // Only apply scroll rotation if not spinning
      if (!isSpinning) {
        logo.style.transform = `rotate(${rotation}deg)`;
      }
      
      lastScrollY = window.scrollY;
    }
    ticking = false;
  }

  window.addEventListener('scroll', () => {
    if (!ticking) {
      window.requestAnimationFrame(updateLogoOnScroll);
      ticking = true;
    }
  }, { passive: true });
</script> 