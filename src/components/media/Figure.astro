---
import { Image } from 'astro:assets';

interface Props {
  src: string;
  alt: string;
  caption?: string;
  width?: number;
  height?: number;
  aspectRatio?: string;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  class?: string;
}

const {
  src,
  alt,
  caption,
  width = 800,
  height = 600,
  aspectRatio,
  loading = 'lazy',
  priority = false,
  class: className = ''
} = Astro.props;

const aspectRatioValue = aspectRatio ? eval(aspectRatio) : undefined;
---
<figure class={`relative overflow-hidden ${aspectRatio ? 'aspect-ratio' : ''} ${className}`}>
  <Image
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    class={`w-full h-full object-cover transition-all duration-300 ${loading === 'lazy' ? 'blur-sm' : ''}`}
  />
  {caption && (
    <figcaption class="mt-2 text-sm text-gray-600 dark:text-gray-400 text-center">
      {caption}
    </figcaption>
  )}
</figure>

<style>
  .aspect-ratio {
    position: relative;
    padding-bottom: calc(var(--aspect-ratio, 56.25%) * 100%);
  }

  .aspect-ratio > :global(img) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @media (prefers-reduced-motion: reduce) {
    .aspect-ratio > :global(img) {
      transition: none;
    }
  }
</style>

<script define:vars={{ aspectRatioValue }}>
  if (aspectRatioValue) {
    const container = document.currentScript?.parentElement;
    if (container) {
      container.style.setProperty('--aspect-ratio', aspectRatioValue);
    }
  }
</script> 