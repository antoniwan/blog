---
interface Props {
  theme?: 'light' | 'dark' | 'auto';
  repo: string;
  repoId: string;
  category: string;
  categoryId: string;
  mapping?: string;
  strict?: boolean;
  reactionsEnabled?: boolean;
  emitMetadata?: boolean;
  inputPosition?: 'top' | 'bottom';
  lang?: string;
  loading?: 'lazy' | 'eager';
}

const {
  theme = 'auto',
  repo,
  repoId,
  category,
  categoryId,
  mapping = 'pathname',
  strict = false,
  reactionsEnabled = true,
  emitMetadata = false,
  inputPosition = 'bottom',
  lang = 'en',
  loading = 'lazy'
} = Astro.props;

// Get the current page URL for mapping
const currentUrl = Astro.url.href;
const currentPath = Astro.url.pathname;
---

<div class="comments-section mt-12 pt-8">
  <h2 class="text-2xl font-bold mb-6 text-[rgb(var(--color-text))]">
    ðŸ’¬ Join the Conversation
  </h2>
  		<p class="text-body-muted mb-8">
    Share your thoughts, ask questions, or simply let me know what resonated with you. 
    I read and respond to every comment personally.
  </p>
  
  <div class="giscus-container bg-[rgb(var(--color-bg))] rounded-lg overflow-hidden">
      <script 
        src="https://giscus.app/client.js"
        data-repo={repo}
        data-repo-id={repoId}
        data-category={category}
        data-category-id={categoryId}
        data-mapping={mapping}
        data-strict={strict}
        data-reactions-enabled={reactionsEnabled}
        data-emit-metadata={emitMetadata}
        data-input-position={inputPosition}
        data-lang={lang}
        data-loading={loading}
        crossorigin="anonymous"
        async
      >
      </script>
  </div>
  
  		<div class="mt-6 text-xs text-body-muted text-center">
    <p>
      Comments powered by 
      <a 
        href="https://giscus.app" 
        target="_blank" 
        rel="noopener noreferrer"
        class="link"
      >
        Giscus
      </a>
      â€¢ 
      <a 
        href="https://github.com/giscus/giscus" 
        target="_blank" 
        rel="noopener noreferrer"
        class="link"
      >
        Open Source
      </a>
    </p>
  </div>
</div>

<script>
  // Theme detection and Giscus theme synchronization
  function updateGiscusTheme() {
    const isDark = document.documentElement.classList.contains('dark');
    const giscusFrame = document.querySelector('iframe[src*="giscus.app"]') as HTMLIFrameElement;
    
    if (giscusFrame && giscusFrame.contentWindow) {
      giscusFrame.contentWindow.postMessage(
        { giscus: { setConfig: { theme: isDark ? 'dark' : 'light' } } },
        'https://giscus.app'
      );
    }
  }

  // Initialize theme on load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', updateGiscusTheme);
  } else {
    updateGiscusTheme();
  }

  // Listen for theme changes
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
        updateGiscusTheme();
      }
    });
  });

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['class']
  });
</script>

<style>
  .giscus-container {
    min-height: 400px;
  }
  
  /* Ensure proper theme switching */
  :global(.giscus) {
    background: transparent !important;
  }
  
  /* Dark mode adjustments - using the site's dark class system */
  :global(.dark .giscus) {
    color-scheme: dark;
  }
  
  :global(.giscus:not(.dark)) {
    color-scheme: light;
  }
</style> 