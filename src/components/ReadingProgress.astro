---
interface Props {
	class?: string;
}

const { class: className = '' } = Astro.props;
---

<div
	class:list={[
		'fixed top-0 left-0 w-full h-1 bg-[rgb(var(--color-bg-alt))] z-50',
		className
	]}
	role="progressbar"
	aria-label="Reading progress"
	aria-valuemin="0"
	aria-valuemax="100"
	aria-valuenow="0"
>
	<div
		id="reading-progress"
		class="h-full bg-[rgb(var(--color-primary))] theme-transition"
		style="width: 0%"
	></div>
</div>

<script>
	const readingProgress = document.getElementById('reading-progress')!;
	const progressBar = document.querySelector('[role="progressbar"]') as HTMLElement;
	let ticking = false;
	let lastProgress = 0;
	let lastScrollY = 0;
	let lastWindowHeight = 0;
	
	function updateReadingProgress() {
		const windowHeight = window.innerHeight;
		const documentHeight = document.documentElement.scrollHeight - windowHeight;
		const scrolled = window.scrollY;
		
		// Skip update if scroll position and window size haven't changed significantly
		if (Math.abs(scrolled - lastScrollY) < 10 && Math.abs(windowHeight - lastWindowHeight) < 10) {
			ticking = false;
			return;
		}
		
		const progress = Math.min((scrolled / documentHeight) * 100, 100);
		
		// Only update if progress changed significantly (performance optimization)
		if (Math.abs(progress - lastProgress) > 1.0) {
			readingProgress.style.width = `${progress}%`;
			lastProgress = progress;
			
			// Update ARIA attributes
			if (progressBar) {
				progressBar.setAttribute('aria-valuenow', Math.round(progress).toString());
			}
		}
		
		lastScrollY = scrolled;
		lastWindowHeight = windowHeight;
		ticking = false;
	}

	function throttledUpdate() {
		if (!ticking) {
			window.requestAnimationFrame(updateReadingProgress);
			ticking = true;
		}
	}

	// Use passive listeners for better performance
	window.addEventListener('scroll', throttledUpdate, { passive: true });
	window.addEventListener('resize', throttledUpdate, { passive: true });
	
	// Initial update
	updateReadingProgress();
</script>

<style>
	/* Smooth transitions for theme changes */
	#reading-progress {
		transition: width 0.2s ease, background-color 0.2s ease;
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		#reading-progress {
			transition: none !important;
		}
	}
</style> 