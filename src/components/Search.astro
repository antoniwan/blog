---
import { getCollection } from 'astro:content';

interface SearchResult {
  title: string;
  url: string;
  tags: string[];
}

// Get all posts for search
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Create search index
const searchIndex: SearchResult[] = posts.map(post => ({
  title: post.data.title,
  url: `/p/${post.id}`,
  tags: post.data.tags || []
}));
---

<form x-data="{ 
  open: false, 
  query: '', 
  results: [], 
  isSearching: false,
  isLoading: true,
  init() {
    this.isLoading = false;
  },
  handleSearch() {
    if (this.query.length > 2) {
      this.isSearching = true;
      setTimeout(() => {
        const searchResults = searchIndex.filter(item => 
          item.title.toLowerCase().includes(this.query.toLowerCase()) ||
          item.tags.some(tag => tag.toLowerCase().includes(this.query.toLowerCase()))
        );
        this.results = searchResults.slice(0, 5);
        this.isSearching = false;
        this.open = true;
      }, 300);
    } else {
      this.results = [];
      this.open = false;
    }
  }
}">
  <label>
    <input
      type="search"
      x-model="query"
      @input="handleSearch()"
      @click="open = true"
      @click.away="open = false"
      @keydown.escape.window="open = false"
      placeholder="Search posts..."
    />
    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
    </svg>
  </label>

  <div x-show="open" style="display: none;" role="listbox">
    <template x-if="isLoading">
      <p>
        <svg viewBox="0 0 24 24" aria-hidden="true">
          <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"></circle>
          <path fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Loading...
      </p>
    </template>

    <template x-if="!isLoading && isSearching">
      <p>
        <svg viewBox="0 0 24 24" aria-hidden="true">
          <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"></circle>
          <path fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Searching...
      </p>
    </template>

    <template x-if="!isLoading && !isSearching && query.length > 2 && results.length === 0">
      <p>No results found</p>
    </template>

    <template x-if="!isLoading && !isSearching && results.length > 0">
      <ul>
        <template x-for="result in results" :key="result.url">
          <li>
            <a :href="result.url" @click="open = false">
              <span x-text="result.title"></span>
              <template x-if="result.tags.length > 0">
                <span x-text="result.tags[0]"></span>
              </template>
            </a>
          </li>
        </template>
      </ul>
    </template>
  </div>
</form>

<script define:vars={{ searchIndex }}>
  // Define searchIndex for Alpine.js
  window.searchIndex = searchIndex;
</script> 