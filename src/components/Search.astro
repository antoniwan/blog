---
import { getCollection } from 'astro:content';

// Get all published posts for search
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Create search index
const searchIndex = posts.map(post => ({
  title: post.data.title,
  url: `/p/${post.id}`,
  tags: post.data.tags || [],
  excerpt: post.data.description || '',
  category: post.data.category || []
}));
---

<div 
  class="relative" 
  x-data="{ 
    open: false, 
    query: '', 
    results: [], 
    selectedIndex: -1,
    searchIndex: searchIndex,
    
    search() {
      if (this.query.length < 2) {
        this.results = [];
        this.open = false;
        this.selectedIndex = -1;
        return;
      }

      const query = this.query.toLowerCase();
      const searchResults = this.searchIndex.filter(item => {
        return item.title.toLowerCase().includes(query) ||
               item.tags.some(tag => tag.toLowerCase().includes(query)) ||
               item.excerpt.toLowerCase().includes(query) ||
               item.category.some(cat => cat.toLowerCase().includes(query));
      });
      
      this.results = searchResults.slice(0, 8);
      this.open = true;
      this.selectedIndex = -1;
    },
    
    handleKeydown(event) {
      if (!this.open) return;
      
      switch(event.key) {
        case 'ArrowDown':
          event.preventDefault();
          this.selectedIndex = Math.min(this.selectedIndex + 1, this.results.length - 1);
          break;
        case 'ArrowUp':
          event.preventDefault();
          this.selectedIndex = Math.max(this.selectedIndex - 1, -1);
          break;
        case 'Enter':
          event.preventDefault();
          if (this.selectedIndex >= 0 && this.results[this.selectedIndex]) {
            window.location.href = this.results[this.selectedIndex].url;
          }
          break;
        case 'Escape':
          this.open = false;
          this.selectedIndex = -1;
          break;
      }
    },
    
    clearSearch() {
      this.query = '';
      this.results = [];
      this.open = false;
      this.selectedIndex = -1;
    }
  }"
  role="search"
>
  <!-- Search Input -->
  <div class="relative">
    <input
      type="search"
      x-model="query"
      @input.debounce.300ms="search()"
      @keydown="handleKeydown($event)"
      @click="open = true"
      @click.away="open = false"
      placeholder="Search posts..."
      class="w-full px-4 py-2 pl-10 pr-10 text-sm bg-background dark:bg-background-dark border border-border dark:border-border-dark rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-transparent transition-colors duration-200"
      aria-label="Search posts"
      aria-expanded="false"
      aria-controls="search-results"
      aria-autocomplete="list"
    />
    
    <!-- Search Icon -->
    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
      <svg 
        class="h-5 w-5 text-neutral-400" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
        aria-hidden="true"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" 
        />
      </svg>
    </div>
    
    <!-- Clear Button -->
    <button
      x-show="query.length > 0"
      @click="clearSearch()"
      class="absolute inset-y-0 right-0 pr-3 flex items-center text-neutral-400 hover:text-neutral-600 dark:hover:text-neutral-300 transition-colors duration-200"
      aria-label="Clear search"
    >
      <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
  </div>

  <!-- Search Results Dropdown -->
  <div
    id="search-results"
    x-show="open"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 translate-y-1"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 translate-y-1"
    class="absolute z-50 mt-2 w-full bg-background dark:bg-background-dark border border-border dark:border-border-dark rounded-lg shadow-lg overflow-hidden max-h-96 overflow-y-auto"
    style="display: none;"
    role="listbox"
    aria-label="Search results"
  >
    <!-- No Results State -->
    <template x-if="query.length >= 2 && results.length === 0">
      <div class="p-4 text-sm text-neutral-500 dark:text-neutral-400">
        No results found for "<span x-text="query"></span>"
      </div>
    </template>

    <!-- Results -->
    <template x-if="results.length > 0">
      <div class="py-2">
        <template x-for="(result, index) in results" :key="result.url">
          <a
            :href="result.url"
            class="block px-4 py-3 hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors duration-200"
            :class="{ 'bg-primary-50 dark:bg-primary-900/20': index === selectedIndex }"
            @click="open = false"
            :aria-label="`${result.title} - ${result.tags.length > 0 ? result.tags[0] : 'No tags'}`"
            role="option"
            :aria-selected="index === selectedIndex"
          >
            <div class="font-medium text-text dark:text-text-dark" x-text="result.title"></div>
            <template x-if="result.excerpt">
              <div class="mt-1 text-sm text-neutral-600 dark:text-neutral-400 line-clamp-1" x-text="result.excerpt"></div>
            </template>
            <template x-if="result.tags.length > 0">
              <div class="mt-2 flex flex-wrap gap-1">
                <template x-for="tag in result.tags.slice(0, 2)" :key="tag">
                  <span class="text-xs px-2 py-0.5 rounded-full bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400" x-text="tag"></span>
                </template>
              </div>
            </template>
          </a>
        </template>
      </div>
    </template>
  </div>
</div>

<script define:vars={{ searchIndex }}>
  // Make searchIndex available globally for debugging if needed
  window.searchIndex = searchIndex;
</script>

<style>
  /* Custom scrollbar for search results */
  #search-results::-webkit-scrollbar {
    width: 6px;
  }

  #search-results::-webkit-scrollbar-track {
    background: transparent;
  }

  #search-results::-webkit-scrollbar-thumb {
    background: rgb(var(--color-border));
    border-radius: 3px;
  }

  #search-results::-webkit-scrollbar-thumb:hover {
    background: rgb(var(--color-border-strong));
  }

  /* Line clamp utility */
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .transition {
      transition: none !important;
    }
  }
</style> 