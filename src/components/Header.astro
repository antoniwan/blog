---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import ThemeToggle from './ThemeToggle.astro';

const navLinks = [
	{ href: '/', label: 'Home' },
	{ href: '/category', label: 'Categories' },
	{ href: '/about', label: 'About' }
];
---

<header class="header" role="banner">
	<nav class="header__nav" aria-label="Main navigation">
		<div class="header__container">
			<a href="/" class="header__logo" aria-label="Home">
				<h2 class="header__title">{SITE_TITLE}</h2>
			</a>
			
			<button 
				class="header__menu-button"
				aria-label="Toggle menu"
				aria-expanded="false"
				aria-controls="header__nav-menu"
				aria-haspopup="true"
			>
				<span class="header__menu-icon" aria-hidden="true">
					<span class="header__menu-icon-bar"></span>
					<span class="header__menu-icon-bar"></span>
					<span class="header__menu-icon-bar"></span>
				</span>
			</button>

			<div class="header__nav-menu" id="header__nav-menu">
				<ul class="header__nav-links">
					{navLinks.map(({ href, label }) => (
						<li class="header__nav-item">
							<HeaderLink href={href}>{label}</HeaderLink>
						</li>
					))}
				</ul>
				<div class="header__theme-toggle">
					<ThemeToggle />
				</div>
			</div>
		</div>
	</nav>
</header>

<style>
	.header {
		position: sticky;
		top: 0;
		z-index: var(--z-index-sticky);
		background-color: #fff;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	}

	.header__nav {
		padding: var(--spacing-md) 0;
	}

	.header__container {
		display: flex;
		justify-content: space-between;
		align-items: center;
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 var(--spacing-md);
	}

	.header__logo {
		text-decoration: none;
		color: inherit;
	}

	.header__title {
		margin: 0;
		font-size: var(--font-size-xl);
	}

	.header__menu-button {
		display: none;
		background: none;
		border: none;
		cursor: pointer;
		padding: var(--spacing-sm);
	}

	.header__menu-icon {
		display: block;
		width: 24px;
		height: 24px;
		position: relative;
	}

	.header__menu-icon-bar {
		display: block;
		width: 100%;
		height: 2px;
		background-color: currentColor;
		margin: 4px 0;
		transition: transform 0.2s ease;
	}

	.header__nav-menu {
		display: flex;
		align-items: center;
		gap: var(--spacing-lg);
	}

	.header__nav-links {
		display: flex;
		gap: var(--spacing-md);
		list-style: none;
		margin: 0;
		padding: 0;
	}

	.header__nav-item {
		margin: 0;
	}

	.header__theme-toggle {
		margin-left: var(--spacing-md);
	}

	@media (max-width: 768px) {
		.header__menu-button {
			display: block;
		}

		.header__nav-menu {
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: #fff;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			transform: translateX(100%);
			transition: transform 0.3s ease;
		}

		.header__nav-menu[aria-expanded="true"] {
			transform: translateX(0);
		}

		.header__nav-links {
			flex-direction: column;
			align-items: center;
		}

		.header__theme-toggle {
			margin-left: 0;
			margin-top: var(--spacing-lg);
		}
	}
</style>

<script>
	// Handle mobile menu toggle
	const menuButton = document.querySelector('.header__menu-button');
	const navMenu = document.querySelector('.header__nav-menu');

	if (menuButton && navMenu) {
		menuButton.addEventListener('click', () => {
			const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
			menuButton.setAttribute('aria-expanded', String(!isExpanded));
			navMenu.setAttribute('aria-expanded', String(!isExpanded));
		});
	}
</script>
