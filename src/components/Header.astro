---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import ThemeToggle from './ThemeToggle.astro';

const navLinks = [
	{ href: '/', label: 'Home' },
	{ href: '/category', label: 'Categories' },
	{ href: '/about', label: 'About' }
];
---

<header 
	class="sticky top-0 z-sticky bg-background/95 dark:bg-gray-dark/95 backdrop-blur-md shadow-sm border-b border-gray-100/60 dark:border-gray-800/60 transition-all duration-300 transform-gpu"
	role="banner"
	id="site-header"
>
	<nav class="py-3 md:py-4" aria-label="Main navigation">
		<div class="max-w-5xl mx-auto px-4 md:px-8">
			<div class="flex justify-between items-center">
				<a 
					href="/" 
					class="group no-underline text-inherit hover:text-primary transition-all duration-300"
					aria-label="Home"
				>
					<h2 class="m-0 text-2xl md:text-3xl font-serif font-bold tracking-tight group-hover:scale-105 transition-transform duration-300">
						{SITE_TITLE}
					</h2>
				</a>
				
				<button 
					class="md:hidden bg-transparent border-none cursor-pointer p-2 text-text hover:text-primary transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-background dark:focus:ring-offset-gray-dark rounded-lg"
					aria-label="Toggle menu"
					aria-expanded="false"
					aria-controls="header__nav-menu"
					aria-haspopup="true"
				>
					<span class="block w-6 h-6 relative" aria-hidden="true">
						<span class="block w-full h-0.5 bg-current my-1 transition-all duration-300 origin-center"></span>
						<span class="block w-full h-0.5 bg-current my-1 transition-all duration-300 origin-center"></span>
						<span class="block w-full h-0.5 bg-current my-1 transition-all duration-300 origin-center"></span>
					</span>
				</button>
			</div>

			<nav 
				id="header__nav-menu"
				class="md:flex md:items-center md:gap-8 fixed md:static top-0 left-0 right-0 bottom-0 bg-background/95 dark:bg-gray-dark/95 backdrop-blur-md flex-col justify-center items-center transform md:transform-none transition-all duration-300 translate-x-full md:translate-x-0"
				aria-label="Primary navigation"
			>
				<ul class="flex md:flex-row flex-col gap-6 md:gap-8 list-none m-0 p-0">
					{navLinks.map(({ href, label }) => (
						<li class="m-0">
							<HeaderLink href={href}>{label}</HeaderLink>
						</li>
					))}
				</ul>
				<div class="md:ml-6 mt-8 md:mt-0">
					<ThemeToggle />
				</div>
			</nav>
		</div>
	</nav>
</header>

<script>
	// Handle mobile menu toggle with enhanced animation
	const menuButton = document.querySelector('button[aria-controls="header__nav-menu"]');
	const navMenu = document.getElementById('header__nav-menu');
	const menuLines = document.querySelectorAll('button span span') as NodeListOf<HTMLElement>;
	const header = document.getElementById('site-header');
	let lastScrollY = window.scrollY;
	let ticking = false;

	// Handle mobile menu toggle
	if (menuButton && navMenu && menuLines) {
		menuButton.addEventListener('click', () => {
			const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
			menuButton.setAttribute('aria-expanded', String(!isExpanded));
			navMenu.classList.toggle('translate-x-full');
			
			// Animate menu lines with smooth transitions
			menuLines.forEach((line, index) => {
				if (!isExpanded) {
					if (index === 0) {
						line.style.transform = 'translateY(8px) rotate(45deg)';
						line.style.transition = 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1)';
					}
					if (index === 1) {
						line.style.opacity = '0';
						line.style.transition = 'opacity 200ms ease-in-out';
					}
					if (index === 2) {
						line.style.transform = 'translateY(-8px) rotate(-45deg)';
						line.style.transition = 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1)';
					}
				} else {
					line.style.transform = '';
					line.style.opacity = '';
					line.style.transition = 'all 300ms cubic-bezier(0.4, 0, 0.2, 1)';
				}
			});
		});

		// Close menu when clicking outside
		document.addEventListener('click', (e) => {
			if (!navMenu.contains(e.target as Node) && !menuButton.contains(e.target as Node)) {
				menuButton.setAttribute('aria-expanded', 'false');
				navMenu.classList.add('translate-x-full');
				menuLines.forEach(line => {
					line.style.transform = '';
					line.style.opacity = '';
					line.style.transition = 'all 300ms cubic-bezier(0.4, 0, 0.2, 1)';
				});
			}
		});
	}

	// Handle header hide/show on scroll with smooth animation
	if (header) {
		const updateHeader = () => {
			const currentScrollY = window.scrollY;
			const scrollDelta = currentScrollY - lastScrollY;
			
			if (scrollDelta > 0 && currentScrollY > 100) {
				header.style.transform = 'translateY(-100%)';
			} else {
				header.style.transform = 'translateY(0)';
			}
			
			lastScrollY = currentScrollY;
			ticking = false;
		};

		window.addEventListener('scroll', () => {
			if (!ticking) {
				window.requestAnimationFrame(updateHeader);
				ticking = true;
			}
		});
	}
</script>

<style>
	/* Enhanced typography for header */
	header h2 {
		font-family: var(--font-serif);
		letter-spacing: -0.025em;
		line-height: 1.2;
	}

	/* Smooth transitions for all interactive elements */
	header a,
	header button {
		transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Mobile menu backdrop blur */
	@media (max-width: 768px) {
		#header__nav-menu {
			backdrop-filter: blur(8px);
			-webkit-backdrop-filter: blur(8px);
		}
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		* {
			transition: none !important;
			animation: none !important;
		}
	}
</style>
