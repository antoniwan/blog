---
import type { MarkdownInstance } from 'astro';

interface Props {
  post: MarkdownInstance<Record<string, any>>;
}

const { post } = Astro.props;

// Process the content
const processedContent = post.Content;
---

<article class="prose prose-lg mx-auto max-w-[65ch] py-8 px-4 [&>img]:w-full [&>img]:h-auto [&>img]:rounded-lg [&>img]:my-8 [&>img]:transition-transform [&>img]:duration-300 [&>img]:hover:scale-[1.02]">
  {processedContent}
</article>

<style>
  /* Enhanced typography styles */
  :global(.prose) {
    --tw-prose-body: var(--text-text);
    --tw-prose-headings: var(--text-text);
    --tw-prose-links: var(--text-primary-500);
    --tw-prose-bold: var(--text-text);
    --tw-prose-counters: var(--text-text-muted);
    --tw-prose-bullets: var(--text-text-muted);
    --tw-prose-hr: var(--border-border);
    --tw-prose-quotes: var(--text-text);
    --tw-prose-quote-borders: var(--border-primary-500);
    --tw-prose-captions: var(--text-text-muted);
    --tw-prose-code: var(--text-text);
    --tw-prose-pre-code: var(--text-text);
    --tw-prose-pre-bg: var(--bg-background-alt);
    --tw-prose-th-borders: var(--border-border);
    --tw-prose-td-borders: var(--border-border);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    :global(.prose img) {
      transition: none !important;
    }
  }
</style> 