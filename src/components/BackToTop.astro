---
interface Props {
	class?: string;
}

const { class: className = '' } = Astro.props;
---

<button
	type="button"
	class:list={[
		'fixed bottom-8 right-8 z-40 inline-flex items-center justify-center p-2 rounded-lg bg-[rgb(var(--color-bg))] text-[rgb(var(--color-text-muted))] hover:text-[rgb(var(--color-primary))] hover:bg-[rgb(var(--color-bg-alt))] shadow-lg theme-transition opacity-0 translate-y-4 invisible',
		'hover:translate-y-0 focus:translate-y-0',
		className
	]}
	aria-label="Back to top"
	id="back-to-top"
>
	<svg
		class="h-6 w-6"
		fill="none"
		stroke="currentColor"
		viewBox="0 0 24 24"
		xmlns="http://www.w3.org/2000/svg"
		aria-hidden="true"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M5 10l7-7m0 0l7 7m-7-7v18"
		/>
	</svg>
</button>

<script>
	const backToTop = document.getElementById('back-to-top');
	let isVisible = false;
	let ticking = false;
	
	function toggleBackToTop() {
		if (!backToTop) return;
		
		const shouldBeVisible = window.scrollY > 300;
		
		if (shouldBeVisible !== isVisible) {
			if (shouldBeVisible) {
				backToTop.classList.remove('opacity-0', 'invisible', 'translate-y-4');
				backToTop.classList.add('opacity-100', 'visible', 'translate-y-0');
			} else {
				backToTop.classList.add('opacity-0', 'invisible', 'translate-y-4');
				backToTop.classList.remove('opacity-100', 'visible', 'translate-y-0');
			}
			isVisible = shouldBeVisible;
		}
		
		ticking = false;
	}
	
	function throttledToggle() {
		if (!ticking) {
			window.requestAnimationFrame(toggleBackToTop);
			ticking = true;
		}
	}
	
	function scrollToTop() {
		// Check if smooth scrolling is supported
		if ('scrollBehavior' in document.documentElement.style) {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
		} else {
			// Fallback for older browsers
			window.scrollTo(0, 0);
		}
	}
	
	window.addEventListener('scroll', throttledToggle, { passive: true });
	backToTop?.addEventListener('click', scrollToTop);
</script>

<style>
	#back-to-top {
		transition: opacity 0.2s ease, transform 0.2s ease;
	}

	#back-to-top:hover {
		transform: translateY(-2px);
	}

	@media (prefers-reduced-motion: reduce) {
		#back-to-top {
			animation: none !important;
			transition: none !important;
		}
	}
</style> 