---
interface Props {
	class?: string;
}

const { class: className = '' } = Astro.props;
---

<button
	type="button"
	class:list={[
		'fixed bottom-8 right-8 z-40 inline-flex items-center justify-center p-2 rounded-lg bg-background dark:bg-background-dark text-neutral-600 dark:text-neutral-400 hover:text-primary-500 dark:hover:text-primary-400 hover:bg-background-alt dark:hover:bg-background-alt-dark shadow-lg transition-all duration-300 opacity-0 translate-y-4 invisible',
		'hover:translate-y-0 focus:translate-y-0',
		className
	]}
	aria-label="Back to top"
	id="back-to-top"
>
	<svg
		class="h-6 w-6"
		fill="none"
		stroke="currentColor"
		viewBox="0 0 24 24"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M5 10l7-7m0 0l7 7m-7-7v18"
		/>
	</svg>
</button>

<script>
	const backToTop = document.getElementById('back-to-top');
	
	function toggleBackToTop() {
		if (!backToTop) return;
		
		if (window.scrollY > 300) {
			backToTop.classList.remove('opacity-0', 'invisible', 'translate-y-4');
			backToTop.classList.add('opacity-100', 'visible', 'translate-y-0');
		} else {
			backToTop.classList.add('opacity-0', 'invisible', 'translate-y-4');
			backToTop.classList.remove('opacity-100', 'visible', 'translate-y-0');
		}
	}
	
	function scrollToTop() {
		window.scrollTo({
			top: 0,
			behavior: 'smooth'
		});
	}
	
	window.addEventListener('scroll', toggleBackToTop);
	backToTop?.addEventListener('click', scrollToTop);
</script>

<style>
	#back-to-top {
		transition: opacity var(--animation-duration-fast) var(--animation-easing-default),
					transform var(--animation-duration-fast) var(--animation-easing-default);
	}

	#back-to-top:hover {
		transform: translateY(-2px);
	}

	@media (prefers-reduced-motion: reduce) {
		#back-to-top {
			animation: none !important;
			transition: none !important;
		}
	}
</style> 