---
interface Props {
	tags: string[];
	maxVisible?: number;
	showMoreIndicator?: boolean;
	compact?: boolean;
	variant?: 'default' | 'subtle' | 'bordered';
	className?: string;
}

const { 
	tags, 
	maxVisible = 5, 
	showMoreIndicator = false,
	compact = false,
	variant = 'default',
	className = ''
} = Astro.props;

// Calculate visible tags and remaining count
const visibleTags = tags.slice(0, maxVisible);
const hasMoreTags = showMoreIndicator && tags.length > maxVisible;
const remainingCount = tags.length - maxVisible;

// Simplified color system
const getTagColor = (tag: string, variant: string) => {
	const colors = {
		default: 'bg-[rgb(var(--color-primary))]/10 border-[rgb(var(--color-primary))]/20 text-[rgb(var(--color-primary))] hover:bg-[rgb(var(--color-primary))]/20',
		subtle: 'bg-[rgb(var(--color-bg-alt))] border-[rgb(var(--color-border))] text-[rgb(var(--color-text-muted))] hover:bg-[rgb(var(--color-bg-alt))]/80',
		bordered: 'bg-transparent border-[rgb(var(--color-primary))]/30 text-[rgb(var(--color-primary))] hover:bg-[rgb(var(--color-primary))]/10'
	};
	
	// Use tag name to consistently assign colors
	const hash = tag.split('').reduce((a, b) => {
		a = ((a << 5) - a) + b.charCodeAt(0);
		return a & a;
	}, 0);
	
	return colors[variant as keyof typeof colors];
};
---

<div class={`tag-display flex flex-wrap items-center gap-2 ${className}`}>
	{visibleTags.map(tag => (
		<a
			href={`/tag/${tag}/`}
			class={`tag-item inline-flex items-center gap-2 px-3 py-1.5 rounded-full border font-medium theme-transition duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-[rgb(var(--color-primary))] focus:ring-offset-1 ${getTagColor(tag, variant)}`}
		>
			<span class="tag-icon" aria-hidden="true">üè∑Ô∏è</span>
			<span class="tag-text">#{tag}</span>
		</a>
	))}
	{hasMoreTags && (
		<span class={`more-indicator inline-flex items-center gap-1.5 ${compact ? 'text-xs px-2.5 py-1' : 'text-sm px-3 py-1.5'} rounded-full bg-[rgb(var(--color-bg-alt))] text-[rgb(var(--color-text-muted))] border border-[rgb(var(--color-border))] font-medium`}>
			<span aria-hidden="true">‚ãØ</span>
			<span>+{remainingCount} more</span>
		</span>
	)}
</div>

<style>
	/* Enhanced tag styling */
	.tag-display {
		/* Container styles */
	}

	.tag-item {
		transition: all 0.2s ease;
		backdrop-filter: blur(4px);
	}

	/* Tag icon styling */
	.tag-icon {
		font-size: 0.875em;
		opacity: 0.8;
	}

	/* Tag text styling */
	.tag-text {
		font-weight: 500;
		letter-spacing: -0.01em;
	}

	/* Tag count styling */
	.tag-count {
		font-weight: 400;
		opacity: 0.75;
	}

	/* More indicator styling */
	.more-indicator {
		transition: all 0.2s ease;
	}

	/* Enhanced hover effects */
	.tag-item:hover {
		transform: translateY(-1px);
		box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -1px rgb(0 0 0 / 0.06);
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		.tag-item,
		.more-indicator {
			transition: none !important;
		}

		.tag-item:hover {
			transform: none;
		}
	}
</style> 