---
import { mainNavigation } from '../data/navigation';
import { getSortedCategories } from '../utils/categoryUtils';

interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;

// Get sorted categories for the dropdown
const sortedCategories = await getSortedCategories();
---

<nav 
	class:list={['flex items-center space-x-1', className]}
	role="navigation"
	aria-label="Main navigation"
>
  {mainNavigation.map((item) => (
    <div class="relative group">
      <a
        href={item.href}
        		class="relative px-3 py-2 text-base font-medium rounded-lg transition-normal"
        class:list={[
          'text-[rgb(var(--color-text-muted))] hover:text-[rgb(var(--color-accent))] hover:bg-[rgb(var(--color-bg-alt))]',
          { 
            'text-[rgb(var(--color-accent))] bg-[rgb(var(--color-accent))]/10 shadow-sm': 
              Astro.url.pathname === item.href 
          }
        ]}
        aria-current={Astro.url.pathname === item.href ? 'page' : undefined}
        transition:name={`nav-${item.href.replace('/', '').replace(/\/$/, '') || 'home'}`}
      >
        <span class="relative z-10">{item.label}</span>
        {Astro.url.pathname === item.href && (
          <span class="absolute inset-0 bg-[rgb(var(--color-accent))]/10 rounded-lg -z-10"></span>
        )}
      </a>
      
      {/* Dropdown for categories */}
      {item.dropdown && item.href === "/category/" && (
        <div class="absolute top-full left-0 mt-1 w-64 bg-[rgb(var(--color-bg))] border border-[rgb(var(--color-border))] rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ease-in-out z-50">
          <div class="p-2">
            <div class="px-3 py-2 text-xs font-semibold text-[rgb(var(--color-text-muted))] uppercase tracking-wide border-b border-[rgb(var(--color-border))] mb-2">
              {item.dropdown.label}
            </div>
            <div class="space-y-1">
              {sortedCategories.map((category) => (
                <a
                  href={`/category/${category.id}/`}
                  		class="flex items-center justify-between px-3 py-2 text-sm text-body-muted rounded-md hover:bg-[rgb(var(--color-bg-alt))] hover:text-[rgb(var(--color-accent))] transition-fast"
                >
                  <div class="flex items-center gap-3">
                    {category.icon && (
                      <span class="text-lg" aria-hidden="true">{category.icon}</span>
                    )}
                    <span>{category.name}</span>
                  </div>
                  <span class="text-xs text-[rgb(var(--color-text-muted))] bg-[rgb(var(--color-bg-alt))] px-2 py-1 rounded-full">
                    {category.postCount}
                  </span>
                </a>
              ))}
            </div>
          </div>
        </div>
      )}
      
      {/* Dropdown for other items (Resources, etc.) */}
      {item.dropdown && item.href !== "/category/" && (
        <div class="absolute top-full left-0 mt-1 w-64 bg-[rgb(var(--color-bg))] border border-[rgb(var(--color-border))] rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ease-in-out z-50">
          <div class="p-2">
            <div class="px-3 py-2 text-xs font-semibold text-[rgb(var(--color-text-muted))] uppercase tracking-wide border-b border-[rgb(var(--color-border))] mb-2">
              {item.dropdown.label}
            </div>
            <div class="space-y-1">
              {item.dropdown.items.map((dropdownItem) => (
                <a
                  href={dropdownItem.href}
                  		class="flex items-center gap-3 px-3 py-2 text-sm text-body-muted rounded-md hover:bg-[rgb(var(--color-bg-alt))] hover:text-[rgb(var(--color-accent))] transition-fast"
                >
                  {dropdownItem.icon && (
                    <span class="text-lg" aria-hidden="true">{dropdownItem.icon}</span>
                  )}
                  <span>{dropdownItem.label}</span>
                </a>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  ))}
</nav>

<style>
  /* Smooth transitions for dark mode */
  nav {
    transition: color var(--animation-duration-fast) var(--animation-easing-default);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    nav {
      transition: none !important;
    }
    nav * {
      transition: none !important;
    }
  }
</style> 
