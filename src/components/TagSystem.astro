---
import TagCard from './TagCard.astro';
import TagDisplay from './TagDisplay.astro';
import TagCloud from './TagCloud.astro';

interface Props {
  // Tag data
  tags?: string[];
  tagStats?: Array<{ tag: string; count: number; size?: number }>;
  
  // Display options
  variant?: 'default' | 'subtle' | 'bordered';
  size?: 'sm' | 'md' | 'lg';
  showCount?: boolean;
  maxVisible?: number;
  showMoreIndicator?: boolean;
  compact?: boolean;
  
  // Layout options
  layout?: 'cloud' | 'list' | 'display';
  className?: string;
  
  // Interaction options
  clickable?: boolean;
  showIcons?: boolean;
}

const { 
  tags = [],
  tagStats = [],
  variant = 'default',
  size = 'md',
  showCount = true,
  maxVisible = 5,
  showMoreIndicator = false,
  compact = false,
  layout = 'display',
  className = '',
  clickable = true,
  showIcons = true
} = Astro.props;

// Convert tags array to tagStats if needed
const finalTagStats = tagStats.length > 0 ? tagStats : tags.map(tag => ({ tag, count: 1 }));
---

{layout === 'cloud' && (
  <TagCloud 
    tags={finalTagStats}
    showCount={showCount}
    className={className}
    variant={variant}
  />
)}

{layout === 'list' && (
  <div class={`tag-list flex flex-wrap gap-2 ${className}`}>
    {finalTagStats.map(({ tag, count, size: tagSize }) => (
      <TagCard 
        tag={tag}
        count={count}
        size={tagSize ? (tagSize > 2 ? 'lg' : tagSize > 1 ? 'md' : 'sm') : size}
        variant={variant}
        showCount={showCount}
      />
    ))}
  </div>
)}

{layout === 'display' && (
  <TagDisplay 
    tags={tags}
    maxVisible={maxVisible}
    showMoreIndicator={showMoreIndicator}
    compact={compact}
    variant={variant}
    className={className}
  />
)}

<style>
  .tag-list {
    /* Container styles for list layout */
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .tag-list {
      gap: 0.375rem;
    }
  }
</style> 