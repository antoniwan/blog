---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE, SITE_DESCRIPTION, AUTHOR, SEO_CONFIG } from '../consts';
import { generateMetaTags, DEFAULT_ROBOTS, DEFAULT_LOCALE } from '../utils/seo';
import { assetConfig } from '../config/assets';

interface Props {
	title: string;
	description?: string;
	path?: string;
	heroImage?: string; // Primary image for social sharing
	imageAlt?: string;
	pubDate?: Date;
	updatedDate?: Date;
	author?: string;
	keywords?: string[];
	locale?: string;
	type?: "website" | "article";
}

const {
	title,
	description = SITE_DESCRIPTION,
	path,
	heroImage,
	imageAlt,
	pubDate,
	updatedDate,
	author = AUTHOR.name,
	keywords = [],
	locale = DEFAULT_LOCALE,
	type
} = Astro.props;

// Generate optimized meta tags with proper heroImage prioritization
const metaTags = generateMetaTags({
	title,
	description,
	path: path || Astro.url.pathname,
	heroImage,
	imageAlt,
	author,
	keywords,
	pubDate,
	updatedDate,
	locale,
	type
});

// Format dates for meta tags
const pubDateISO = pubDate?.toISOString();
const updatedDateISO = updatedDate?.toISOString();
---

<!-- Character Set & Viewport -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="viewport-height" content="100vh" />

<!-- Performance Optimizations -->
<link rel="preload" href="https://fonts.gstatic.com/s/opensans/v40/memSYaGs126MiZpBA-UvWbX2vVnXBbObj2OVZyOOSr4dVJWUgsjZ0B4gaVI.woff2" as="font" type="font/woff2" crossorigin />
<link rel="preload" href="https://fonts.gstatic.com/s/opensans/v40/memSYaGs126MiZpBA-UvWbX2vVnXBbObj2OVZyOOSr4dVJWUgsg-1x4gaVI.woff2" as="font" type="font/woff2" crossorigin />
<link rel="preload" href="https://fonts.gstatic.com/s/sourceserifpro/v22/neIXzD-0qpwxpaWvjeD0X88SAOeauXo-oAGIyY0Wfw.woff2" as="font" type="font/woff2" crossorigin />

<!-- Critical Resource Preloading -->
{heroImage && <link rel="preload" href={heroImage} as="image" />}
<link rel="preload" href="/images/default.avif" as="image" />

<!-- Theme & Color -->
<meta name="theme-color" content="#3b82f6" media="(prefers-color-scheme: light)" />
<meta name="theme-color" content="#0f172a" media="(prefers-color-scheme: dark)" />
<meta name="color-scheme" content="light dark" />

<!-- Theme Initialization Script - Prevents FOUC -->
<script is:inline>
  // Theme initialization - must run before any content renders
  (function() {
    try {
      console.log('Theme initialization starting...');
      
      // Get stored theme preference or default to system preference
      const storedTheme = localStorage.getItem('theme');
      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      
      console.log('Stored theme:', storedTheme);
      console.log('System prefers dark:', systemPrefersDark);
      
      // Determine initial theme
      let theme = 'light';
      if (storedTheme === 'dark' || (!storedTheme && systemPrefersDark)) {
        theme = 'dark';
      }
      
      console.log('Initial theme determined:', theme);
      console.log('Before - has dark class:', document.documentElement.classList.contains('dark'));
      
      // Apply theme immediately to prevent FOUC
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
      
      console.log('After - has dark class:', document.documentElement.classList.contains('dark'));
      console.log('Current classes:', document.documentElement.className);
      
      // Debug CSS variables after initialization
      setTimeout(() => {
        const computedStyle = getComputedStyle(document.documentElement);
        console.log('CSS Variables after initialization:');
        console.log('--color-bg:', computedStyle.getPropertyValue('--color-bg'));
        console.log('--color-text:', computedStyle.getPropertyValue('--color-text'));
        console.log('--color-bg-alt:', computedStyle.getPropertyValue('--color-bg-alt'));
      }, 100);
      
      // Update meta theme-color
      const metaThemeColor = document.querySelector('meta[name="theme-color"]');
      if (metaThemeColor) {
        metaThemeColor.setAttribute('content', theme === 'dark' ? '#0f172a' : '#ffffff');
      }
      
      console.log('Theme initialization complete');
    } catch (error) {
      console.error('Theme initialization error:', error);
      // Fallback to system preference if localStorage fails
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        document.documentElement.classList.add('dark');
      }
    }
  })();
</script>

<!-- Favicon & Icons -->
<link rel="icon" type="image/x-icon" href="/favicon.ico" sizes="any" />
<link rel="icon" type="image/svg+xml" href={assetConfig.images.favicon} />
<link rel="icon" type="image/png" href="/favicon-192x192.png" sizes="192x192" />
<link rel="icon" type="image/png" href="/favicon-512x512.png" sizes="512x512" />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
<link rel="manifest" href={assetConfig.manifest} />

<!-- Language & Generator -->
<meta http-equiv="content-language" content="en" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={metaTags.canonical} />

<!-- RSS Feed -->
<link
	rel="alternate"
	type="application/rss+xml"
	title={`${SITE_TITLE} - RSS Feed`}
	href={new URL('rss.xml', Astro.site)}
/>

<!-- JSON Feed -->
<link
	rel="alternate"
	type="application/feed+json"
	title={`${SITE_TITLE} - JSON Feed`}
	href={new URL('feed.json', Astro.site)}
/>

<!-- Sitemap -->
<link rel="sitemap" href={new URL('sitemap-index.xml', Astro.site)} />

<!-- Primary Meta Tags -->
<title>{metaTags.title}</title>
<meta name="description" content={metaTags.description} />
<meta name="robots" content={metaTags.robots} />
{metaTags.keywords && <meta name="keywords" content={metaTags.keywords} />}
<meta name="author" content={metaTags.author} />

<!-- Google Site Verification -->
<meta name="google-site-verification" content={SEO_CONFIG.googleSiteVerification} />
<meta name="msvalidate.01" content="B878D55AD354B419B85B9C027369D93C" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={metaTags.ogType} />
<meta property="og:url" content={metaTags.canonical} />
<meta property="og:title" content={metaTags.title} />
<meta property="og:description" content={metaTags.description} />
<meta property="og:image" content={metaTags.ogImage} />
<meta property="og:image:alt" content={metaTags.ogImageAlt} />
<meta property="og:locale" content={metaTags.locale} />
<meta property="og:site_name" content={SITE_TITLE} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={metaTags.canonical} />
<meta property="twitter:title" content={metaTags.title} />
<meta property="twitter:description" content={metaTags.description} />
<meta property="twitter:image" content={metaTags.ogImage} />
<meta property="twitter:image:alt" content={metaTags.ogImageAlt} />
<meta name="twitter:creator" content={SEO_CONFIG.twitterHandle} />
<meta name="twitter:site" content={SEO_CONFIG.twitterHandle} />

<!-- Article Specific Meta Tags -->
{pubDateISO && <meta property="article:published_time" content={pubDateISO} />}
{updatedDateISO && <meta property="article:modified_time" content={updatedDateISO} />}
{metaTags.keywords && <meta property="article:tag" content={metaTags.keywords} />}
<meta property="article:author" content={AUTHOR.url} />
<meta property="article:section" content="Blog" />

<!-- Additional Meta Tags -->
<meta name="format-detection" content="telephone=no" />
<meta name="referrer" content="strict-origin-when-cross-origin" />

<!-- Preconnect to external domains for performance -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="preconnect" href="https://giscus.app" />

<!-- DNS Prefetch for external resources -->
<link rel="dns-prefetch" href="//giscus.app" />
<link rel="dns-prefetch" href="//fonts.googleapis.com" />
<link rel="dns-prefetch" href="//fonts.gstatic.com" />

<!-- Critical CSS Inline for Above-the-Fold Content -->
<style>
  /* Critical CSS for immediate rendering - Minimal to avoid theme conflicts */
  
  html {
    font-family: 'Open Sans', system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  body {
    margin: 0;
    min-height: 100vh;
    font-size: 16px;
    line-height: 1.6;
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Source Serif Pro', Georgia, serif;
    font-weight: 600;
    line-height: 1.2;
    margin: 0 0 1rem 0;
    color: inherit;
  }
  
  h1 { font-size: 2.5rem; }
  h2 { font-size: 2rem; }
  h3 { font-size: 1.5rem; }
  
  .animate-fade-in {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  /* Prevent layout shift during font loading */
  .font-loading {
    font-display: swap;
  }
</style>
