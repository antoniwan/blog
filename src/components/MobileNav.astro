---
import { mainNavigation } from '../data/navigation';
---

<!-- Hamburger Button -->
<button
  id="mobile-menu-button"
  type="button"
  aria-label="Open menu"
  aria-expanded="false"
  aria-controls="mobile-menu"
  class="inline-flex items-center justify-center p-2 rounded-lg text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-primary-500 md:hidden theme-transition"
>
  <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
  </svg>
</button>

<!-- Mobile Menu Overlay -->
<div
  id="mobile-menu"
  class="fixed inset-0 z-50 hidden flex flex-col bg-white dark:bg-neutral-900 h-screen w-full transform transition-transform duration-300 ease-in-out md:hidden"
  tabindex="-1"
  aria-modal="true"
  role="dialog"
  aria-label="Mobile navigation menu"
>
  <!-- Menu Header -->
  <div class="flex items-center justify-between p-4 border-b border-neutral-200 dark:border-neutral-800">
    <span class="text-lg font-semibold text-text dark:text-text-dark">Menu</span>
    <button
      type="button"
      aria-label="Close menu"
      class="p-2 rounded-lg text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-primary-500 theme-transition"
      id="close-mobile-menu"
    >
      <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
  </div>

  <!-- Navigation Links -->
  <nav class="flex-1 overflow-y-auto p-4 space-y-4" aria-label="Mobile navigation">
    <!-- Primary Navigation -->
    <div class="space-y-1">
      {mainNavigation.map((item) => (
        <div>
          <a
            href={item.href}
            class="flex items-center justify-between text-lg font-medium text-neutral-800 dark:text-neutral-200 py-3 px-4 rounded-lg hover:bg-neutral-100 dark:hover:bg-neutral-800 theme-transition"
            aria-current={Astro.url.pathname === item.href ? 'page' : undefined}
          >
            <span>{item.label}</span>
            {item.dropdown && (
              <svg class="h-5 w-5 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
            )}
          </a>
          {item.dropdown && (
            <div class="pl-4 mt-2 space-y-1 border-l-2 border-neutral-200 dark:border-neutral-700 ml-4">
              {item.dropdown.items.map((dropdownItem) => (
                <a
                  href={dropdownItem.href}
                  class="flex items-center gap-3 text-base text-neutral-700 dark:text-neutral-300 py-2 px-4 rounded-md hover:bg-neutral-100 dark:hover:bg-neutral-800 theme-transition"
                >
                  {dropdownItem.icon && <span class="text-lg" aria-hidden="true">{dropdownItem.icon}</span>}
                  <span>{dropdownItem.label}</span>
                </a>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>

    <!-- Social Links - Simplified -->
    <div class="border-t border-neutral-200 dark:border-neutral-800 pt-4">
      <div class="flex justify-center gap-6">
        <a
          href="https://bsky.app/profile/antoniwan.online"
          target="_blank"
          rel="noopener noreferrer"
          class="p-3 rounded-lg bg-neutral-50 dark:bg-neutral-800 hover:bg-neutral-100 dark:hover:bg-neutral-700 theme-transition"
          aria-label="BlueSky"
        >
          <span class="text-xl">üåÄ</span>
        </a>
        <a
          href="https://github.com/antoniwan/strongvault"
          target="_blank"
          rel="noopener noreferrer"
          class="p-3 rounded-lg bg-neutral-50 dark:bg-neutral-800 hover:bg-neutral-100 dark:hover:bg-neutral-700 theme-transition"
          aria-label="GitHub"
        >
          <span class="text-xl">üêô</span>
        </a>
        <a
          href="https://www.youtube.com/@Antoniwan777"
          target="_blank"
          rel="noopener noreferrer"
          class="p-3 rounded-lg bg-neutral-50 dark:bg-neutral-800 hover:bg-neutral-100 dark:hover:bg-neutral-700 theme-transition"
          aria-label="YouTube"
        >
          <span class="text-xl">üì∫</span>
        </a>
      </div>
    </div>
  </nav>
</div>

<script>
  // Optimized mobile navigation with proper cleanup
  let menuButton: HTMLElement | null = null;
  let menu: HTMLElement | null = null;
  let closeButton: HTMLElement | null = null;
  let isInitialized = false;

  function initializeMobileNav() {
    if (isInitialized) return;
    
    menuButton = document.getElementById('mobile-menu-button');
    menu = document.getElementById('mobile-menu');
    closeButton = document.getElementById('close-mobile-menu');
    
    if (!menuButton || !menu || !closeButton) return;
    
    // Add event listeners
    menuButton.addEventListener('click', openMenu);
    closeButton.addEventListener('click', closeMenu);
    menu.addEventListener('click', handleOverlayClick);
    document.addEventListener('keydown', handleKeydown);
    
    // Add click listeners to all navigation links
    const navLinks = menu.querySelectorAll('a');
    navLinks.forEach(link => {
      link.addEventListener('click', closeMenu);
    });
    
    isInitialized = true;
  }

  function openMenu() {
    if (!menu || !menuButton) return;
    menu.classList.remove('hidden');
    menuButton.setAttribute('aria-expanded', 'true');
    document.body.classList.add('overflow-hidden');
    
    // Focus first focusable element
    const firstFocusable = menu.querySelector('a, button, input') as HTMLElement;
    if (firstFocusable) {
      firstFocusable.focus();
    }
  }
  
  function closeMenu() {
    if (!menu || !menuButton) return;
    menu.classList.add('hidden');
    menuButton.setAttribute('aria-expanded', 'false');
    document.body.classList.remove('overflow-hidden');
    menuButton.focus();
  }

  function handleOverlayClick(e: Event) {
    if (e.target === menu) {
      closeMenu();
    }
  }

  function handleKeydown(e: KeyboardEvent) {
    if (e.key === 'Escape' && menu && !menu.classList.contains('hidden')) {
      closeMenu();
    }
  }

  function cleanup() {
    if (!isInitialized) return;
    
    menuButton?.removeEventListener('click', openMenu);
    closeButton?.removeEventListener('click', closeMenu);
    menu?.removeEventListener('click', handleOverlayClick);
    document.removeEventListener('keydown', handleKeydown);
    
    // Remove link click listeners
    const navLinks = menu?.querySelectorAll('a');
    navLinks?.forEach(link => {
      link.removeEventListener('click', closeMenu);
    });
    
    isInitialized = false;
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMobileNav);
  } else {
    initializeMobileNav();
  }

  // Cleanup on page unload
  window.addEventListener('beforeunload', cleanup);
</script>

<style>
@media (min-width: 768px) {
  #mobile-menu-button {
    display: none;
  }
  #mobile-menu {
    display: none !important;
  }
}
</style> 