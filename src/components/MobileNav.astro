---
import { mainNavigation } from '../data/navigation';
import Search from './Search.astro';
---

<!-- Hamburger Button -->
<button
  id="mobile-menu-button"
  type="button"
  aria-label="Open menu"
  aria-expanded="false"
  aria-controls="mobile-menu"
  class="inline-flex items-center justify-center p-2 rounded-lg text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-primary-500 md:hidden"
>
  <svg class="h-7 w-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
  </svg>
</button>

<!-- Overlay Menu -->
<div
  id="mobile-menu"
  class="fixed inset-0 z-50 hidden flex flex-col bg-white dark:bg-neutral-900 h-screen w-full transform transition-transform duration-300 ease-in-out md:hidden"
  tabindex="-1"
  aria-modal="true"
  role="dialog"
>
  <div class="flex items-center justify-between p-4 border-b border-neutral-200 dark:border-neutral-800">
    <span class="text-lg font-semibold">Menu</span>
    <button
      type="button"
      aria-label="Close menu"
      class="p-2 rounded-lg text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-primary-500"
      id="close-mobile-menu"
    >
      <svg class="h-7 w-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
  </div>

  <!-- Mobile Search -->
  <div class="p-4 border-b border-neutral-200 dark:border-neutral-800">
    <Search />
  </div>

  <nav class="flex-1 overflow-y-auto p-4 space-y-4">
    {mainNavigation.map((item) => (
      <div>
        <a
          href={item.href}
          class="block text-lg font-medium text-neutral-800 dark:text-neutral-200 py-2 rounded hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors"
        >
          {item.label}
        </a>
        {item.dropdown && (
          <div class="pl-4 mt-1 space-y-1">
            {item.dropdown.items.map((dropdownItem) => (
              <a
                href={dropdownItem.href}
                class="flex items-center text-base text-neutral-700 dark:text-neutral-300 py-1 rounded hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors"
              >
                {dropdownItem.icon && <span class="mr-2">{dropdownItem.icon}</span>}
                {dropdownItem.label}
              </a>
            ))}
          </div>
        )}
      </div>
    ))}
  </nav>
</div>

<script>
  const menuButton = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');
  const closeButton = document.getElementById('close-mobile-menu');

  function openMenu() {
    if (!menu || !menuButton) return;
    menu.classList.remove('hidden');
    menuButton.setAttribute('aria-expanded', 'true');
    document.body.classList.add('overflow-hidden');
    menu.focus();
  }
  function closeMenu() {
    if (!menu || !menuButton) return;
    menu.classList.add('hidden');
    menuButton.setAttribute('aria-expanded', 'false');
    document.body.classList.remove('overflow-hidden');
    menuButton.focus();
  }

  menuButton?.addEventListener('click', openMenu);
  closeButton?.addEventListener('click', closeMenu);

  // Close on overlay click (if you want, add a semi-transparent overlay div)
  menu?.addEventListener('click', (e) => {
    if (e.target === menu) closeMenu();
  });

  // Close on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && menu && !menu.classList.contains('hidden')) {
      closeMenu();
    }
  });

  // Close on link click
  if (menu) {
    menu.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', closeMenu);
    });
  }
</script>

<style>
@media (min-width: 768px) {
  #mobile-menu-button {
    display: none;
  }
  #mobile-menu {
    display: none !important;
  }
}
</style> 