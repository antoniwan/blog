---
interface Props {
  /**
   * The type of content being contained
   */
  type?: 'content' | 'container' | 'card' | 'media';
  
  /**
   * The size variant for the container
   */
  size?: 'narrow' | 'default' | 'wide';
  
  /**
   * Whether to apply responsive padding
   */
  padding?: 'none' | 'sm' | 'md' | 'lg';
  
  /**
   * Additional classes to apply
   */
  className?: string;
}

const { 
  type = 'container',
  size = 'default',
  padding = 'md',
  className = ''
} = Astro.props;

// Content type determines the base max-width
const typeClasses = {
  content: 'max-w-prose',
  container: 'max-w-container',
  card: 'max-w-card',
  media: 'max-w-media'
};

// Size variants adjust the width
const sizeClasses = {
  narrow: 'max-w-container-narrow',
  default: 'max-w-container',
  wide: 'max-w-container-wide'
};

// Responsive padding using design system tokens
const paddingClasses = {
  none: '',
  sm: 'px-sm md:px-md',
  md: 'px-sm md:px-lg lg:px-xl',
  lg: 'px-sm md:px-xl lg:px-2xl'
};

// Combine classes based on type and size
const getMaxWidthClass = () => {
  if (type === 'content') return typeClasses.content;
  if (type === 'media') return typeClasses.media;
  if (type === 'card') return typeClasses.card;
  return sizeClasses[size];
};
---

<div 
  class:list={[
    'mx-auto w-full',
    getMaxWidthClass(),
    paddingClasses[padding],
    className
  ]}
>
  <slot />
</div> 