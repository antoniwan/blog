---
interface Props {
  /**
   * The padding size
   */
  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  
  /**
   * The max-width constraint
   */
  maxWidth?: 'none' | 'prose' | 'prose-wide' | 'container' | 'container-narrow';
  
  /**
   * Whether to add a top border
   */
  hasBorder?: boolean;
  
  /**
   * Whether to use an alternate background
   */
  isAlt?: boolean;
  
  /**
   * Additional classes to apply
   */
  class?: string;
}

const { 
  padding = 'md',
  maxWidth = 'none',
  hasBorder = false,
  isAlt = false,
  class: className = ''
} = Astro.props;

// Map padding sizes to Tailwind classes with better responsive margins
const paddingMap = {
  none: '',
  sm: 'px-4 py-6 md:px-8 md:py-8 lg:px-12',
  md: 'px-6 py-8 md:px-8 md:py-12 lg:px-16',
  lg: 'px-8 py-12 md:px-12 md:py-16 lg:px-20',
  xl: 'px-8 py-16 md:px-16 md:py-24 lg:px-24'
};

// Map max-width to Tailwind classes
const maxWidthMap = {
  none: 'max-w-none',
  prose: 'max-w-prose',
  'prose-wide': 'max-w-prose-wide',
  container: 'max-w-container',
  'container-narrow': 'max-w-container-narrow'
};

const paddingClass = paddingMap[padding];
const maxWidthClass = maxWidthMap[maxWidth];

// Determine if this should render as a section or div
const isSection = hasBorder || isAlt;
const Element = isSection ? 'section' : 'div';
---

<Element
  class:list={[
    'w-full mx-auto',
    maxWidthClass,
    paddingClass,
    {
      'border-t border-border/10': hasBorder,
      'bg-background-alt dark:bg-background-alt-dark': isAlt
    },
    className
  ]}
>
  <slot />
</Element>

<style>
  /* Print styles */
  @media print {
    section {
      max-width: none !important;
      padding: 0 !important;
      margin: 0 !important;
    }
  }
</style> 