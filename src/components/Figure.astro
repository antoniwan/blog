---
interface Props {
  /**
   * The image source
   */
  src: string;
  
  /**
   * The image alt text
   */
  alt: string;
  
  /**
   * The image caption
   */
  caption?: string;
  
  /**
   * The image width
   */
  width?: number;
  
  /**
   * The image height
   */
  height?: number;
  
  /**
   * Whether to make the image full width
   */
  fullWidth?: boolean;
  
  /**
   * Additional classes to apply
   */
  class?: string;
}

const {
  src,
  alt,
  caption,
  width,
  height,
  fullWidth = false,
  class: className = ''
} = Astro.props;

// Convert aspect ratio to decimal
const aspectRatioMap = {
  '16:9': 16/9,
  '4:3': 4/3,
  '1:1': 1,
  '3:4': 3/4,
  '9:16': 9/16,
};

const aspectRatioValue = aspectRatioMap['16:9'];
const paddingBottom = `${(1/aspectRatioValue) * 100}%`;
---

<figure 
	class:list={[
		'my-xl',
		{ 'max-w-full': fullWidth },
		className
	]}
>
	<div class="relative overflow-hidden rounded-lg shadow-lg">
		<img
			src={src}
			alt={alt}
			width={width}
			height={height}
			class="w-full h-auto object-cover theme-transition"
			loading="lazy"
			decoding="async"
			onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
		/>
		<div class="hidden w-full h-48 bg-neutral-100 dark:bg-neutral-800 flex items-center justify-center">
			<span class="text-neutral-400 dark:text-neutral-500">Image failed to load</span>
		</div>
	</div>
	{caption && (
		<figcaption class="mt-sm text-sm text-neutral-600 dark:text-neutral-400 text-center">
			{caption}
		</figcaption>
	)}
</figure>

<style>
	figure {
		transition: transform var(--animation-duration-normal) var(--animation-easing-default);
	}

	figure:hover {
		transform: translateY(-2px);
	}

	@media (prefers-reduced-motion: reduce) {
		figure,
		figure img {
			transition: none !important;
		}
	}
</style> 