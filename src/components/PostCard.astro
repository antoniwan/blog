---
import { categories } from '../data/categories';
import { formatDistanceToNow } from 'date-fns';
import Figure from './media/Figure.astro';
import { LANGUAGE_FLAGS } from '../consts';
import FormattedDate from './FormattedDate.astro';

interface Props {
	post: {
		id: string;
		data: {
			title: string;
			description: string;
			pubDate: Date;
			category?: string[];
			subcategory?: string;
			language: string[];
			readingTime?: number;
			tags?: string[];
			image?: string;
		};
	};
	translations?: {
		id: string;
		language: string;
	}[];
}

const { post, translations = [] } = Astro.props;

// Find the category data for all categories
const categoryData = post.data.category?.map(catId => categories.find(cat => cat.id === catId)) || [];

// Get language flag emoji using the constant from consts.ts
const getLanguageFlag = (lang: string) => LANGUAGE_FLAGS[lang] || lang.toUpperCase();
---

<article 
	class="group card hover:elevation-lg transition-all duration-300 overflow-hidden animate-fade-up"
	aria-label={`Post: ${post.data.title}`}
	transition:animate="slide"
	transition:name={`post-${post.id}`}
>
	<a href={`/p/${post.id}/`} class="block no-underline text-inherit focus-ring" transition:name={`post-link-${post.id}`}>
		{post.data.image && (
			<div class="relative pt-[56.25%] bg-background-alt overflow-hidden">
				<Figure
					src={post.data.image}
					alt={`Featured image for ${post.data.title}`}
					aspectRatio="16:9"
					class="group-hover:scale-105 transition-transform duration-300"
					priority={false}
					transition:name={`post-image-${post.id}`}
				/>
				<div class="absolute inset-0 bg-gradient-to-t from-background/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
			</div>
		)}
		
		<div class="p-6 md:p-7 space-y-4" transition:name={`post-content-${post.id}`}>
			{/* Metadata Section */}
			<div class="flex items-center justify-between border-b border-border/20 pb-3">
				{post.data.readingTime && (
					<span class="text-xs px-2 py-0.5 rounded-full bg-background-alt font-medium text-text-muted transition-colors duration-200">
						{post.data.readingTime} min read
					</span>
				)}
				<div class="flex items-center gap-2">
					<FormattedDate date={post.data.pubDate} format="relative" />
					<span class="text-text-muted">‚Ä¢</span>
					<FormattedDate date={post.data.pubDate} format="short" />
				</div>
			</div>

			{/* Title Section */}
			<div class="space-y-3 mt-4">
				<h3 class="text-2xl md:text-3xl font-serif font-bold leading-tight tracking-tight text-text group-hover:text-primary-500 transition-colors duration-300">
					{post.data.title}
				</h3>

				<p class="text-base md:text-lg text-text-muted leading-relaxed line-clamp-3">
					{post.data.description}
				</p>
			</div>

			{/* Categories Section */}
			{post.data.category && (
				<div class="flex flex-wrap gap-3 mb-4">
					{categoryData.map(cat => cat && (
						<a 
							href={`/category/${cat.id}/`} 
							class="inline-flex items-center gap-1.5 text-sm font-medium bg-background-alt text-text-muted px-4 py-1.5 rounded-full hover:bg-background-elevated transition-all duration-200 hover:scale-105 focus-ring"
						>
							{cat.icon} {cat.name}
						</a>
					))}
				</div>
			)}

			{/* Tags Section */}
			{post.data.tags && post.data.tags.length > 0 && (
				<div class="flex flex-wrap gap-3 mb-4">
					{post.data.tags.map(tag => (
						<a 
							href={`/tag/${tag}/`} 
							class="inline-flex items-center gap-1.5 text-sm font-medium bg-background-alt text-text-muted px-4 py-1.5 rounded-full hover:bg-background-elevated transition-all duration-200 hover:scale-105 focus-ring"
						>
							üè∑Ô∏è {tag}
						</a>
					))}
				</div>
			)}

			{/* Footer Section */}
			<div class="flex items-center justify-between pt-3 border-t border-border/20">
				{/* Translations Section */}
				{translations.length > 0 && (
					<div class="flex items-center gap-2">
						<span class="text-xs text-text-muted">Available in:</span>
						<div class="flex gap-1">
							{translations.map(t => (
								<a 
									href={`/p/${t.id}/`}
									class="text-xs px-2 py-0.5 rounded-full bg-background-alt font-medium text-text-muted hover:bg-background-elevated transition-colors duration-200 focus-ring"
									title={`View in ${t.language.toUpperCase()}`}
								>
									{getLanguageFlag(t.language)}
								</a>
							))}
						</div>
					</div>
				)}
			</div>
		</div>
	</a>
</article>

<style>
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	@media (prefers-reduced-motion: reduce) {
		* {
			transition: none !important;
			animation: none !important;
		}
	}

	/* Astro transition styles */
	::view-transition-old(post-*),
	::view-transition-new(post-*) {
		animation: none;
		mix-blend-mode: normal;
	}

	::view-transition-old(post-*) {
		z-index: 1;
	}

	::view-transition-new(post-*) {
		z-index: 2;
	}

	.dark::view-transition-old(post-*) {
		z-index: 2;
	}

	.dark::view-transition-new(post-*) {
		z-index: 1;
	}
</style> 