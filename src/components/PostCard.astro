---
import FormattedDate from './FormattedDate.astro';
import { categories } from '../data/categories';

interface Props {
	post: {
		id: string;
		data: {
			title: string;
			description: string;
			pubDate: Date;
			category?: string[];
			subcategory?: string;
			language: string[];
			readingTime?: number;
			tags?: string[];
			image?: string;
		};
	};
	translations?: {
		id: string;
		language: string;
	}[];
}

const { post, translations } = Astro.props;

// Find the category data for all categories
const categoryData = post.data.category?.map(catId => categories.find(cat => cat.id === catId)) || [];

// Get the alternate language translation if it exists
const alternateTranslation = translations?.find(t => t.id !== post.id);
---

<article class="group bg-background dark:bg-gray-dark rounded-lg shadow-md overflow-hidden transition-all duration-300 hover:-translate-y-1 hover:shadow-xl">
	<a href={`/blog/${post.id}/`} class="block no-underline text-inherit">
		{post.data.image && (
			<div class="relative pt-[56.25%] bg-gray-light dark:bg-gray overflow-hidden">
				<img
					src={post.data.image}
					alt=""
					class="absolute top-0 left-0 w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
					width="800"
					height="400"
					loading="lazy"
				/>
				<div class="absolute inset-0 bg-gradient-to-t from-background/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
			</div>
		)}
		<div class="p-6 md:p-8">
			<div class="flex flex-wrap gap-2 mb-4">
				{post.data.category && (
					<span class="inline-block px-3 py-1 bg-gray-light/20 dark:bg-gray/20 text-primary text-sm font-medium rounded-full transition-colors duration-300 group-hover:bg-primary/10">
						{post.data.category.map((catId) => categories.find(cat => cat.id === catId)?.name).join(', ')}
					</span>
				)}
				{post.data.readingTime && (
					<span class="inline-block px-3 py-1 bg-gray-light/20 dark:bg-gray/20 text-gray dark:text-gray-light text-sm font-medium rounded-full transition-colors duration-300 group-hover:bg-gray-light/30 dark:group-hover:bg-gray/30">
						{post.data.readingTime} min read
					</span>
				)}
			</div>
			<h3 class="text-xl md:text-2xl font-serif font-bold mb-3 text-black dark:text-gray-light leading-tight group-hover:text-primary transition-colors duration-300">
				{post.data.title}
			</h3>
			<p class="text-gray dark:text-gray-light mb-6 leading-relaxed line-clamp-3">
				{post.data.description}
			</p>
			<div class="flex items-center justify-between text-sm text-gray dark:text-gray-light">
				<time datetime={post.data.pubDate.toISOString()} class="flex items-center gap-2">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
					</svg>
					{post.data.pubDate.toLocaleDateString('en-US', {
						year: 'numeric',
						month: 'long',
						day: 'numeric'
					})}
				</time>
				{post.data.tags && post.data.tags.length > 0 && (
					<span class="flex items-center gap-2">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
						</svg>
						{post.data.tags[0]}
					</span>
				)}
			</div>
		</div>
	</a>
</article>

<style>
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	@media (prefers-reduced-motion: reduce) {
		* {
			transition: none !important;
			animation: none !important;
		}
	}
</style> 