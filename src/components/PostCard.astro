---
import FormattedDate from './FormattedDate.astro';
import { categories } from '../data/categories';

interface Props {
	post: {
		id: string;
		data: {
			title: string;
			description: string;
			pubDate: Date;
			category?: string[];
			subcategory?: string;
			language: string[];
			readingTime?: number;
			tags?: string[];
			image?: string;
		};
	};
	translations?: {
		id: string;
		language: string;
	}[];
}

const { post, translations } = Astro.props;

// Find the category data for all categories
const categoryData = post.data.category?.map(catId => categories.find(cat => cat.id === catId)) || [];

// Get the alternate language translation if it exists
const alternateTranslation = translations?.find(t => t.id !== post.id);
---

<article class="bg-white rounded-lg shadow-md overflow-hidden transition-all duration-200 hover:-translate-y-1 hover:shadow-lg">
	<a href={`/blog/${post.id}/`} class="block no-underline text-inherit">
		{post.data.image && (
			<div class="relative pt-[56.25%] bg-gray-light">
				<img
					src={post.data.image}
					alt=""
					class="absolute top-0 left-0 w-full h-full object-cover"
					width="800"
					height="400"
					loading="lazy"
				/>
			</div>
		)}
		<div class="p-6 md:p-8">
			{post.data.category && (
				<span class="inline-block px-2 py-1 bg-gray-light/20 text-primary text-sm font-medium rounded-md mb-2">
					{post.data.category.map((catId) => categories.find(cat => cat.id === catId)?.name).join(', ')}
				</span>
			)}
			<h3 class="text-xl md:text-2xl font-semibold mb-2 text-black leading-tight">{post.data.title}</h3>
			<p class="text-gray mb-4 leading-relaxed">{post.data.description}</p>
			<time class="text-sm text-gray" datetime={post.data.pubDate.toISOString()}>
				{post.data.pubDate.toLocaleDateString('en-US', {
					year: 'numeric',
					month: 'long',
					day: 'numeric'
				})}
			</time>
		</div>
	</a>
</article> 