---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

interface Props {
	post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { data } = post;
---

<article class="group bg-background dark:bg-background-dark rounded-xl border border-border/20 dark:border-border-dark/20 shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1">
	<div class="p-6">
		<header class="mb-4">
			<div class="flex items-center gap-4 text-sm text-neutral-600 dark:text-neutral-400 mb-3">
				{data.pubDate && (
					<time datetime={data.pubDate.toISOString()} class="flex items-center gap-1.5">
						<span class="text-primary-500 dark:text-primary-400">📅</span>
						<FormattedDate date={data.pubDate} format="long" />
					</time>
				)}
				{data.category && data.category.length > 0 && (
					<span class="flex items-center gap-1.5">
						<span class="text-primary-500 dark:text-primary-400">📁</span>
						<a 
							href={`/category/${data.category[0]}/`}
							class="hover:text-primary-500 dark:hover:text-primary-400 transition-colors"
						>
							{data.category[0]}
						</a>
					</span>
				)}
			</div>
			<h2 class="text-2xl font-bold text-text dark:text-text-dark group-hover:text-primary-500 dark:group-hover:text-primary-400 transition-colors">
				<a href={`/p/${post.id}/`} class="hover:underline focus-ring">
					{data.title}
				</a>
			</h2>
		</header>
		
		{data.description && (
			<p class="text-neutral-600 dark:text-neutral-400 mb-4 line-clamp-3">
				{data.description}
			</p>
		)}
		
		<footer class="flex flex-wrap gap-2">
			{data.tags?.map(tag => (
				<a
					href={`/tag/${tag}/`}
					class="inline-flex items-center gap-1.5 text-sm px-3 py-1.5 rounded-full bg-zinc-100 dark:bg-zinc-800 text-gray-700 dark:text-gray-300 hover:bg-zinc-200 dark:hover:bg-zinc-700 transition-colors"
				>
					<span>🏷️</span>
					<span>{tag}</span>
				</a>
			))}
		</footer>
	</div>
</article>

<style>
	/* Smooth transitions for dark mode */
	article {
		transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
					color 300ms cubic-bezier(0.4, 0, 0.2, 1),
					transform 300ms cubic-bezier(0.4, 0, 0.2, 1),
					box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		article {
			transition: none !important;
		}
	}
</style> 