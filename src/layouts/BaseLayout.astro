---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BaseHead from '../components/BaseHead.astro';
import BackToTop from '../components/BackToTop.astro';
import FormattedDate from '../components/FormattedDate.astro';
import ReadingProgress from '../components/ReadingProgress.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import Analytics from '@vercel/analytics/astro';

interface Props {
  title: string;
  description?: string;
  // Blog-specific props
  pubDate?: Date;
  updatedDate?: Date;
  heroImage?: string;
  readingTime?: number;
  tags?: string[];
  category?: string[];
  subcategory?: string;
  language?: string[];
  // SEO fields
  canonicalUrl?: string;
  ogImage?: string;
  ogImageAlt?: string;
  robots?: {
    index?: boolean;
    follow?: boolean;
    noarchive?: boolean;
    nosnippet?: boolean;
    noimageindex?: boolean;
  };
  // Layout type
  layoutType?: 'default' | 'blog';
}

const { 
  title, 
  description = SITE_DESCRIPTION,
  pubDate,
  updatedDate,
  heroImage,
  readingTime,
  tags,
  category = [],
  subcategory,
  language = ['en'],
  canonicalUrl,
  ogImage,
  ogImageAlt,
  robots,
  layoutType = 'default'
} = Astro.props;

const languageEmojis: Record<string, string> = {
  en: 'üá∫üá∏',
  es: 'üáµüá∑'
};

const categoryEmojis: Record<string, string> = {
  'art-expression': 'üéµ',
  'diy-creation': 'üõ†Ô∏è',
  'integration-growth': 'üßòüèΩ‚Äç‚ôÇÔ∏è',
  'learning-projects': 'üìö',
  'metaspace': 'üåÄ',
  'parenting': 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
  'politics': '‚öñÔ∏è',
  'psychology': 'üß†',
  'systems-strategy': 'üíª'
};

const capitalize = (str: string) => str ? str.charAt(0).toUpperCase() + str.slice(1) : '';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead 
      title={title} 
      description={description}
      image={heroImage}
      canonicalUrl={canonicalUrl}
      ogImage={ogImage}
      ogImageAlt={ogImageAlt}
      robots={robots}
      pubDate={pubDate}
      updatedDate={updatedDate}
      author={SITE_TITLE}
      keywords={tags}
      locale={language[0] ? `${language[0]}_${language[0].toUpperCase()}` : 'en_US'}
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
  </head>
  <body class="min-h-screen flex flex-col">
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:bg-white dark:focus:bg-gray-900 focus:px-4 focus:py-2 focus:rounded focus:shadow-lg focus:ring-2 focus:ring-primary">Skip to main content</a>
    <Header />
    <ReadingProgress />
    <main id="main-content" role="main" class="flex-grow">
      {layoutType === 'blog' && (
        <article class="max-w-5xl mx-auto px-4 md:px-8 py-12">
          <header class="mb-16">
            <div class="flex flex-wrap gap-3 mb-8">
              {category && category.length > 0 && (
                <div class="flex flex-wrap gap-3">
                  {category.map((cat) => (
                    <a 
                      href={`/category/${cat.toLowerCase()}`} 
                      class="inline-flex items-center gap-1.5 text-sm font-medium bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-300 px-4 py-1.5 rounded-full hover:bg-zinc-200 dark:hover:bg-zinc-700 transition-all duration-200 hover:scale-105"
                    >
                      {categoryEmojis[cat] || 'üìù'} {capitalize(cat)}
                    </a>
                  ))}
                </div>
              )}
              {subcategory && (
                <span class="text-sm text-zinc-600 dark:text-zinc-400 font-medium">{subcategory}</span>
              )}
              {language && language.length > 0 && (
                <div class="flex flex-wrap gap-3">
                  {language.map((lang) => (
                    <span class="inline-flex items-center gap-1.5 text-sm text-zinc-600 dark:text-zinc-400 font-medium">
                      {languageEmojis[lang] || 'üåê'} {lang.toUpperCase()}
                    </span>
                  ))}
                </div>
              )}
            </div>
            <h1 class="text-4xl md:text-5xl lg:text-6xl font-serif font-bold mb-8 leading-tight tracking-tight">{title}</h1>
            {description && <p class="text-xl md:text-2xl text-zinc-600 dark:text-zinc-400 mb-10 leading-relaxed">{description}</p>}
            <div class="flex flex-wrap gap-6 text-sm text-zinc-600 dark:text-zinc-400">
              {pubDate && (
                <time datetime={pubDate.toISOString()} class="flex items-center gap-2">
                  <span class="text-primary">üìÖ</span>
                  <FormattedDate date={pubDate} />
                </time>
              )}
              {updatedDate && (
                <time datetime={updatedDate.toISOString()} class="flex items-center gap-2">
                  <span class="text-primary">üîÑ</span>
                  Updated: <FormattedDate date={updatedDate} />
                </time>
              )}
              {readingTime && (
                <span class="flex items-center gap-2">
                  <span class="text-primary">‚è±Ô∏è</span>
                  {readingTime} min read
                </span>
              )}
            </div>
          </header>
          <section class="prose prose-lg dark:prose-invert max-w-none prose-headings:font-serif prose-headings:tracking-tight prose-p:leading-relaxed prose-p:text-lg prose-a:text-primary prose-a:no-underline hover:prose-a:underline prose-img:rounded-lg prose-img:shadow-lg prose-blockquote:border-l-4 prose-blockquote:border-primary prose-blockquote:pl-4 prose-blockquote:italic prose-blockquote:bg-zinc-50 dark:prose-blockquote:bg-zinc-800 prose-blockquote:p-4 prose-blockquote:rounded-r-lg prose-ul:my-6 prose-ol:my-6 prose-li:my-2 prose-h2:mt-12 prose-h2:mb-6 prose-h3:mt-8 prose-h3:mb-4">
            <slot />
          </section>
        </article>
      )}
      {layoutType === 'default' && (
        <section class="max-w-5xl mx-auto px-4 md:px-8 py-12">
          <slot />
        </section>
      )}
    </main>
    <Footer />
    <BackToTop />
    <Analytics />
  </body>
</html>

<style>
	/* Enhanced typography for longform content */
	.prose {
		--tw-prose-body: var(--tw-color-text);
		--tw-prose-headings: var(--tw-color-text);
		--tw-prose-links: var(--tw-color-primary);
		--tw-prose-bold: var(--tw-color-text);
		--tw-prose-counters: var(--tw-color-text);
		--tw-prose-bullets: var(--tw-color-text);
		--tw-prose-hr: var(--tw-color-border);
		--tw-prose-quotes: var(--tw-color-text);
		--tw-prose-quote-borders: var(--tw-color-primary);
		--tw-prose-captions: var(--tw-color-text);
		--tw-prose-code: var(--tw-color-text);
		--tw-prose-pre-code: var(--tw-color-text);
		--tw-prose-pre-bg: var(--tw-color-background);
		--tw-prose-th-borders: var(--tw-color-border);
		--tw-prose-td-borders: var(--tw-color-border);
	}

	/* Drop cap for first paragraph */
	.prose > p:first-of-type::first-letter {
		float: left;
		font-size: 4.5em;
		line-height: 0.8;
		margin-right: 0.1em;
		margin-bottom: 0.1em;
		font-family: var(--font-serif);
		color: var(--tw-color-primary);
	}

	/* Enhanced blockquote styling */
	.prose blockquote {
		border-left-width: 4px;
		border-left-color: var(--tw-color-primary);
		padding-left: 1.5rem;
		font-style: italic;
		background-color: var(--tw-color-zinc-50);
		padding: 1.5rem;
		border-radius: 0 0.5rem 0.5rem 0;
	}

	/* Dark mode optimizations */
	@media (prefers-color-scheme: dark) {
		.prose blockquote {
			background-color: var(--tw-color-zinc-800);
		}
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		* {
			transition: none !important;
			animation: none !important;
		}
	}
</style> 