---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BaseHead from '../components/BaseHead.astro';
import BackToTop from '../components/BackToTop.astro';
import FormattedDate from '../components/FormattedDate.astro';
import ReadingProgress from '../components/ReadingProgress.astro';
import LayoutContainer from '../components/LayoutContainer.astro';
import { SITE_TITLE, SITE_DESCRIPTION, LANGUAGE_FLAGS, CATEGORY_EMOJIS, AUTHOR } from '../consts';
import SpeedInsights from "@vercel/speed-insights/astro"
import Analytics from '@vercel/analytics/astro';

interface Props {
  title: string;
  description?: string;
  // Blog-specific props
  pubDate?: Date;
  updatedDate?: Date;
  heroImage?: string;
  readingTime?: number;
  tags?: string[];
  category?: string[];
  subcategory?: string;
  language?: string[];
  // SEO fields
  canonicalUrl?: string;
  ogImage?: string;
  ogImageAlt?: string;
  robots?: {
    index?: boolean;
    follow?: boolean;
    noarchive?: boolean;
    nosnippet?: boolean;
    noimageindex?: boolean;
  };
  // Additional SEO fields
  author?: string;
  keywords?: string[];
  locale?: string;
  // Layout type
  layoutType?: 'default' | 'blog' | 'home' | 'category';
  // Content width
  contentWidth?: 'narrow' | 'default' | 'wide';
  // Spacing
  spacing?: 'compact' | 'default' | 'comfortable';
  // Additional layout options
  showTitle?: boolean;
  showDescription?: boolean;
  showMeta?: boolean;
}

const { 
  title, 
  description = SITE_DESCRIPTION,
  pubDate,
  updatedDate,
  heroImage,
  readingTime,
  tags,
  category = [],
  language = ['en'],
  canonicalUrl,
  ogImage,
  ogImageAlt,
  robots,
  author = AUTHOR.name,
  keywords = tags,
  locale = language[0] ? `${language[0]}_${language[0].toUpperCase()}` : 'en_US',
  layoutType = 'default',
  contentWidth = 'default',
  spacing = 'default',
  showTitle = true,
  showDescription = true,
  showMeta = true
} = Astro.props;

const languageEmojis: Record<string, string> = {
  en: '🇺🇸',
  es: '🇵🇷',
  fr: '🇫🇷',
  de: '🇩🇪',
  it: '🇮🇹',
  pt: '🇵🇹',
  ru: '🇷🇺',
  zh: '🇨🇳',
  ja: '🇯🇵',
  ko: '🇰🇷'
};

const categoryEmojis: Record<string, string> = {
  'art-expression': '🎵',
  'diy-creation': '🛠️',
  'integration-growth': '🧘🏽‍♂️',
  'learning-projects': '📚',
  'metaspace': '🌀',
  'parenting': '👨‍👩‍👧‍👦',
  'politics': '⚖️',
  'psychology': '🧠',
  'systems-strategy': '💻'
};

// Map contentWidth and spacing to LayoutContainer props
const sizeMap = { narrow: 'narrow', default: 'default', wide: 'wide' };
const paddingMap = { compact: 'sm', default: 'md', comfortable: 'lg' };
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <BaseHead 
      title={title} 
      description={description}
      image={heroImage}
      canonicalUrl={canonicalUrl}
      ogImage={ogImage}
      ogImageAlt={ogImageAlt}
      robots={robots}
      pubDate={pubDate}
      updatedDate={updatedDate}
      author={author}
      keywords={keywords}
      locale={locale}
    />
    <SpeedInsights />
  </head>
  <body class="min-h-screen flex flex-col bg-background text-text dark:bg-background-dark dark:text-text-dark antialiased">
    <script>
      // Prevent FOUC in Firefox
      document.documentElement.classList.add('ready');
    </script>
    
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-sm focus:left-sm focus:z-50 focus:bg-background dark:focus:bg-background-dark focus:px-sm focus:py-xs focus:rounded focus:shadow-lg focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-background-dark">Skip to main content</a>
    
    <Header />
    <ReadingProgress />
    
    <main 
      id="main-content" 
      role="main" 
      class="flex-grow animate-fade-in"
    >
      <LayoutContainer type="container" size={sizeMap[contentWidth] as 'narrow' | 'default' | 'wide'} padding={paddingMap[spacing] as 'sm' | 'md' | 'lg' | 'none'}>
        {layoutType === 'blog' && (
          <article class="animate-fade-in" transition:animate="fade">
            <div class="prose prose-lg dark:prose-invert prose-headings:font-serif prose-headings:tracking-tight prose-p:leading-relaxed prose-p:text-lg prose-a:text-primary-500 dark:prose-a:text-primary-400 prose-a:no-underline hover:prose-a:underline prose-img:rounded-lg prose-img:shadow-lg prose-blockquote:border-l-4 prose-blockquote:border-primary-500 dark:prose-blockquote:border-primary-400 prose-blockquote:pl-4 prose-blockquote:italic prose-blockquote:bg-neutral-100 dark:prose-blockquote:bg-neutral-800 prose-blockquote:p-4 prose-blockquote:rounded-r-lg prose-ul:my-xl prose-ol:my-xl prose-li:my-sm prose-h2:mt-3xl prose-h2:mb-xl prose-h3:mt-2xl prose-h3:mb-lg">
              <slot />
            </div>
          </article>
        )}
        {layoutType === 'default' && (
          <div class="animate-fade-in" transition:animate="fade">
            <div class="prose prose-lg dark:prose-invert max-w-none">
              <slot />
            </div>
          </div>
        )}
        {(layoutType === 'home' || layoutType === 'category') && (
          <div class="animate-fade-in" transition:animate="fade">
            <slot />
          </div>
        )}
      </LayoutContainer>
    </main>
    
    <Footer />
    <BackToTop />
    <Analytics />
  </body>
</html>

<style>
  /* Enhanced typography for longform content */
  .prose {
    --tw-prose-body: var(--tw-color-text);
    --tw-prose-headings: var(--tw-color-text);
    --tw-prose-links: var(--tw-color-primary-500);
    --tw-prose-bold: var(--tw-color-text);
    --tw-prose-counters: var(--tw-color-text);
    --tw-prose-bullets: var(--tw-color-text);
    --tw-prose-hr: var(--tw-color-border);
    --tw-prose-quotes: var(--tw-color-text);
    --tw-prose-quote-borders: var(--tw-color-primary-500);
    --tw-prose-captions: var(--tw-color-text);
    --tw-prose-code: var(--tw-color-text);
    --tw-prose-pre-code: var(--tw-color-text);
    --tw-prose-pre-bg: var(--tw-color-background);
    --tw-prose-th-borders: var(--tw-color-border);
    --tw-prose-td-borders: var(--tw-color-border);
  }

  /* Drop cap for first paragraph */
  .prose > p:first-of-type::first-letter {
    float: left;
    font-size: 4.5em;
    line-height: 0.8;
    margin-right: 0.1em;
    margin-bottom: 0.1em;
    font-family: var(--font-serif);
    color: var(--tw-color-primary-500);
  }

  /* Enhanced blockquote styling */
  .prose blockquote {
    border-left-width: 4px;
    border-left-color: var(--tw-color-primary-500);
    padding-left: 1.5rem;
    font-style: italic;
    background-color: var(--tw-color-neutral-100);
    padding: 1.5rem;
    border-radius: 0 0.5rem 0.5rem 0;
    position: relative;
  }

  .prose blockquote::before {
    content: '"';
    font-size: 4em;
    position: absolute;
    left: 0.5rem;
    top: -0.5rem;
    color: var(--tw-color-primary-500);
    font-family: var(--font-serif);
    opacity: 0.2;
  }

  /* Code block enhancement */
  .prose pre {
    background-color: var(--tw-color-neutral-900);
    border-radius: 0.5rem;
    padding: 1rem;
    border: 1px solid var(--tw-color-neutral-200);
    overflow-x: auto;
  }

  .prose code {
    font-family: var(--font-mono);
    font-size: 0.875em;
    background-color: var(--tw-color-neutral-100);
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    color: var(--tw-color-neutral-900);
  }

  .dark .prose code {
    background-color: var(--tw-color-neutral-800);
    color: var(--tw-color-neutral-100);
  }

  /* Focus ring utility */
  .focus-ring {
    @apply focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-background-dark;
  }

  /* Smooth transitions */
  main, .prose {
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
                color 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    main, .prose {
      transition: none !important;
    }
  }

  /* Print styles */
  @media print {
    .prose {
      max-width: none;
    }
    
    .prose pre {
      break-inside: avoid;
    }
    
    .prose img {
      break-inside: avoid;
    }

    .prose blockquote {
      break-inside: avoid;
      border-left-width: 2px;
      padding: 1rem;
    }

    .prose h1, .prose h2, .prose h3 {
      break-after: avoid;
    }

    .prose p {
      orphans: 3;
      widows: 3;
    }

    /* Hide non-essential elements */
    header, footer, .reading-progress, .back-to-top {
      display: none !important;
    }

    /* Ensure proper page breaks */
    main {
      margin: 0 !important;
      padding: 0 !important;
    }

    /* Optimize text for printing */
    body {
      font-size: 12pt;
      line-height: 1.5;
      color: #000 !important;
      background: #fff !important;
    }

    /* Ensure links are visible */
    a {
      text-decoration: underline;
      color: #000 !important;
    }

    /* Add URL after external links */
    a[href^="http"]:after {
      content: " (" attr(href) ")";
      font-size: 90%;
    }
  }

  /* Animation styles */
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slide-up {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes slide-down {
    from {
      transform: translateY(-20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
</style> 