---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BaseHead from '../components/BaseHead.astro';
import BackToTop from '../components/BackToTop.astro';
import FormattedDate from '../components/FormattedDate.astro';
import ReadingProgress from '../components/ReadingProgress.astro';
import LayoutContainer from '../components/LayoutContainer.astro';
import { SITE_TITLE, SITE_DESCRIPTION, LANGUAGE_FLAGS, CATEGORY_EMOJIS, AUTHOR } from '../consts';
import SpeedInsights from "@vercel/speed-insights/astro"
import Analytics from '@vercel/analytics/astro';

interface Props {
  title: string;
  description?: string;
  // Blog-specific props
  pubDate?: Date;
  updatedDate?: Date;
  heroImage?: string;
  readingTime?: number;
  tags?: string[];
  category?: string[];
  subcategory?: string;
  language?: string[];
  // SEO fields
  canonicalUrl?: string;
  ogImage?: string;
  ogImageAlt?: string;
  robots?: {
    index?: boolean;
    follow?: boolean;
    noarchive?: boolean;
    nosnippet?: boolean;
    noimageindex?: boolean;
  };
  // Additional SEO fields
  author?: string;
  keywords?: string[];
  locale?: string;
  // Layout type
  layoutType?: 'default' | 'blog' | 'home' | 'category';
  // Content width
  contentWidth?: 'narrow' | 'default' | 'wide';
  // Spacing
  spacing?: 'compact' | 'default' | 'comfortable';
  // Additional layout options
  showTitle?: boolean;
  showDescription?: boolean;
  showMeta?: boolean;
}

const { 
  title, 
  description = SITE_DESCRIPTION,
  pubDate,
  updatedDate,
  heroImage,
  readingTime,
  tags,
  category = [],
  language = ['en'],
  canonicalUrl,
  ogImage,
  ogImageAlt,
  robots,
  author = AUTHOR.name,
  keywords = tags,
  locale = language[0] ? `${language[0]}_${language[0].toUpperCase()}` : 'en_US',
  layoutType = 'default',
  contentWidth = 'default',
  spacing = 'default',
  showTitle = true,
  showDescription = true,
  showMeta = true
} = Astro.props;

const languageEmojis: Record<string, string> = {
  en: '🇺🇸',
  es: '🇵🇷',
  fr: '🇫🇷',
  de: '🇩🇪',
  it: '🇮🇹',
  pt: '🇵🇹',
  ru: '🇷🇺',
  zh: '🇨🇳',
  ja: '🇯🇵',
  ko: '🇰🇷'
};

const categoryEmojis: Record<string, string> = {
  'art-expression': '🎵',
  'diy-creation': '🛠️',
  'integration-growth': '🧘🏽‍♂️',
  'learning-projects': '📚',
  'metaspace': '🌀',
  'parenting': '👨‍👩‍👧‍👦',
  'politics': '⚖️',
  'psychology': '🧠',
  'systems-strategy': '💻'
};

// Map spacing to LayoutContainer padding
const spacingMap = {
  compact: 'sm',
  default: 'md',
  comfortable: 'lg'
} as const;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <BaseHead 
      title={title} 
      description={description}
      image={heroImage}
      canonicalUrl={canonicalUrl}
      ogImage={ogImage}
      ogImageAlt={ogImageAlt}
      robots={robots}
      pubDate={pubDate}
      updatedDate={updatedDate}
      author={author}
      keywords={keywords}
      locale={locale}
    />
    <SpeedInsights />
  </head>
  <body class="min-h-screen flex flex-col bg-background text-text dark:bg-background-dark dark:text-text-dark antialiased">
    <script>
      // Prevent FOUC in Firefox
      document.documentElement.classList.add('ready');
    </script>
    
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:bg-background dark:focus:bg-background-dark focus:px-4 focus:py-2 focus:rounded focus:shadow-lg focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-background-dark">Skip to main content</a>
    
    <Header />
    <ReadingProgress />
    
    <main 
      id="main-content" 
      role="main" 
      class="flex-grow animate-fade-in"
    >
      <LayoutContainer 
        type="container" 
        size={contentWidth} 
        padding={spacingMap[spacing]}
      >
        {layoutType === 'blog' && (
          <article class="animate-fade-in" transition:animate="fade">
            <div class="prose prose-lg dark:prose-invert max-w-none">
              <slot />
            </div>
          </article>
        )}
        {layoutType === 'default' && (
          <div class="animate-fade-in" transition:animate="fade">
            <div class="prose prose-lg dark:prose-invert max-w-none">
              <slot />
            </div>
          </div>
        )}
        {(layoutType === 'home' || layoutType === 'category') && (
          <div class="animate-fade-in" transition:animate="fade">
            <slot />
          </div>
        )}
      </LayoutContainer>
    </main>
    
    <Footer />
    <BackToTop />
    <Analytics />
  </body>
</html> 