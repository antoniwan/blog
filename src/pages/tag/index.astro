---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageSection from '../../components/PageSection.astro';
import { getCollection } from 'astro:content';

// Get all posts
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Get post counts by tag
const tagCounts = posts.reduce((acc, post) => {
  post.data.tags?.forEach(tag => {
    acc[tag] = (acc[tag] || 0) + 1;
  });
  return acc;
}, {} as Record<string, number>);

// Sort tags by post count
const sortedTags = Object.entries(tagCounts)
  .sort(([, a], [, b]) => b - a)
  .map(([tag]) => tag);
---

<BaseLayout
  title="Tags"
  description="Browse posts by tag"
  layoutType="default"
  contentWidth="default"
  spacing="comfortable"
>
  <PageSection width="default" spacing="comfortable" class="text-center">
    <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-text dark:text-text-dark leading-tight tracking-tight">
      Tags
    </h1>
    <p class="text-xl md:text-2xl text-neutral-600 dark:text-neutral-400 leading-relaxed max-w-2xl mx-auto">
      Browse posts by tag
    </p>
  </PageSection>

  <PageSection width="default" spacing="default">
    <div class="flex flex-wrap gap-2">
      {sortedTags.map(tag => {
        const count = tagCounts[tag];
        return (
          <a
            href={`/tag/${tag}/`}
            class="flex items-center gap-1.5 text-sm px-3 py-1.5 rounded-full bg-zinc-100 dark:bg-zinc-800 text-gray-700 dark:text-gray-300 hover:bg-zinc-200 dark:hover:bg-zinc-700 transition-colors"
          >
            <span>üè∑Ô∏è</span>
            <span>{tag}</span>
            <span class="text-xs px-1.5 py-0.5 rounded-full bg-zinc-200 dark:bg-zinc-700 text-gray-600 dark:text-gray-400">{count}</span>
          </a>
        );
      })}
    </div>
  </PageSection>
</BaseLayout>

<style>
  /* Smooth transitions for dark mode */
  main {
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
                color 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    main {
      transition: none !important;
    }
  }
</style> 