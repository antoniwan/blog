---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogLayout from '../../layouts/BlogLayout.astro';
import LayoutContainer from '../../components/LayoutContainer.astro';
import { render } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);

// Combine tags and categories for keywords, ensuring all values are strings
const keywords = [
	...(post.data.tags || []),
	...(post.data.category || []),
	post.data.subcategory,
	...(post.data.language || [])
].filter((value): value is string => typeof value === 'string');

// Ensure we have a valid image for social sharing
const shareImage = post.data.ogImage || post.data.heroImage || '/share-image.png';
const shareImageAlt = post.data.ogImageAlt || post.data.title;

// Generate table of contents from headings
const headings = post.body?.match(/<h[2-3][^>]*>.*?<\/h[2-3]>/g) || [];
const tableOfContents = {
	items: headings.map(heading => {
		const text = heading.replace(/<[^>]+>/g, '');
		const depth = parseInt(heading.match(/<h([2-3])/)?.[1] || '2');
		const slug = text.toLowerCase().replace(/[^a-z0-9]+/g, '-');
		return { text, slug, depth };
	})
};
---

<BlogLayout 
	title={post.data.title}
	description={post.data.description}
	pubDate={post.data.pubDate}
	updatedDate={post.data.updatedDate}
	heroImage={post.data.heroImage}
	readingTime={post.data.readingTime}
	tags={post.data.tags}
	category={post.data.category}
	canonicalUrl={post.data.canonicalUrl}
	ogImage={shareImage}
	ogImageAlt={shareImageAlt}
	robots={post.data.robots}
	author={post.data.author}
	keywords={keywords}
	tableOfContents={tableOfContents}
>
	<LayoutContainer type="section" padding="none">
		<article class="prose prose-lg dark:prose-invert max-w-none">
			<Content />
		</article>
	</LayoutContainer>
</BlogLayout> 