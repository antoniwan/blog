---
import PageLayout from '../layouts/PageLayout.astro';
import Container from '../components/Container.astro';
import Chapter from '../components/Chapter.astro';
import { getCollection } from 'astro:content';

// Get all published posts
const allPosts = await getCollection('blog', ({ data }) => {
	return import.meta.env.PROD ? !data.draft : true;
});

// Define chapter structure
interface PathChapter {
	id: string;
	title: string;
	tags: string[];
	posts: typeof allPosts;
}

// Simplified chapter definitions
const chapters: PathChapter[] = [
	{
		id: 'prologue',
		title: 'Prologue',
		tags: ['consciousness', 'thinking', 'self-reflection', 'introspection'],
		posts: []
	},
	{
		id: 'foundations',
		title: 'Foundations',
		tags: [
			'nutrition', 'health', 'wellness', 'cooking', 'healthy-eating', 'micronutrients', 'fasting',
			'digital-safety', 'boundaries', 'control', 'discipline', 'self-control', 'emotional-regulation',
			'mental-health', 'therapy', 'trauma', 'fear', 'emotional-health', 'emotional-pain', 'emotional-intelligence'
		],
		posts: []
	},
	{
		id: 'belonging',
		title: 'Belonging',
		tags: [
			'family', 'family-dynamics', 'children', 'parenting', 'conscious-parenting', 'co-parenting',
			'fatherhood', 'relationships', 'connection', 'empathy', 'compassion', 'collective-healing',
			'social-issues', 'social-justice', 'child-development', 'childhood', 'vulnerability'
		],
		posts: []
	},
	{
		id: 'mastery',
		title: 'Mastery',
		tags: [
			'confidence-building', 'mastery', 'achievement', 'respect', 'responsibility', 'accountability',
			'leadership', 'professional-development', 'imposter-syndrome', 'self-discipline', 'self-mastery',
			'power', 'authority', 'feedback', 'self-awareness', 'humility', 'ego'
		],
		posts: []
	},
	{
		id: 'actualization',
		title: 'Actualization',
		tags: [
			'personal-growth', 'self-improvement', 'growth', 'learning', 'learning-projects', 'self-discovery',
			'self-expression', 'art-expression', 'creativity', 'diy-creation', 'craftsmanship', 'development',
			'transformation', 'intentional-living', 'purpose', 'meaning', 'authenticity', 'adaptability',
			'decision-making', 'efficiency', 'habits', 'limits', 'patience', 'productivity', 'self-construction',
			'self-reflection', 'simplicity', 'slow-living', 'time', 'tips', 'tools', 'workflow', 'writing',
			'digital-art', 'customization'
		],
		posts: []
	},
	{
		id: 'transcendence',
		title: 'Transcendence',
		tags: [
			'self-transcendence', 'spirituality', 'consciousness', 'existentialism', 'philosophy', 'humanism',
			'atheism', 'mythology', 'symbols', 'inner-work', 'inner-peace', 'serenity', 'contentment',
			'meditation', 'mindfulness', 'presence', 'truth', 'healing', 'inner-child', 'reflection',
			'resilience', 'ritual', 'routine'
		],
		posts: []
	},
	{
		id: 'systems',
		title: 'Systems',
		tags: [
			'technology', 'systems-strategy', 'software-development', 'productivity', 'tools', 'workflow',
			'customization', 'terminal', 'wezterm', 'powershell', 'oh-my-posh', 'zoxide', 'windows',
			'nvm', 'fzf', 'efficiency', 'learning-projects'
		],
		posts: []
	},
	{
		id: 'culture',
		title: 'Culture',
		tags: [
			'politics', 'social-issues', 'social-justice', 'collective-healing', 'culture', 'power',
			'fear', 'control', 'truth', 'freedom', 'identity'
		],
		posts: []
	},
	{
		id: 'epilogue',
		title: 'Epilogue',
		tags: [
			'transformation', 'growth', 'evolution', 'reflection', 'meaning', 'purpose', 'change',
			'progress', 'improvement', 'development', 'excellence'
		],
		posts: []
	}
];

// Filter posts for each chapter
chapters.forEach(chapter => {
	chapter.posts = allPosts.filter(post => {
		if (!post.data.tags) return false;
		return post.data.tags.some(tag => chapter.tags.includes(tag));
	}).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
});
---

<PageLayout
	title="Guided Path - Curious Chaos Journal"
	description="A structured journey through consciousness, growth, and transformation."
	path="/guided-path"
>
	<Container>
		<div class="guided-path">
			<div class="chapters">
				{chapters.map((chapter, index) => (
					<Chapter 
						posts={chapter.posts} 
						chapterTitle={chapter.title}
						chapterId={chapter.id}
						defaultExpanded={index === 0} // Only expand the first chapter by default
					/>
				))}
			</div>
			
			<div class="local-storage-info">
				<h3>About Your Reading Data</h3>
				<p>
					This site uses your browser's local storage to remember what you've read and enhance your experience. 
					It's like having a personal reading journal that lives in your browser — completely private and under your control.
				</p>
				
				<p>
					<strong>What we save:</strong> Which posts you've completed, when you read them, how long you spent reading, 
					and your reading preferences. Think of it as your digital reading fingerprint — unique to you, 
					helping you track your journey through these thoughts and ideas.
				</p>
				
				<p>
					<strong>Privacy & Safety:</strong> I can't access this data. It lives only in your browser, 
					on your device. It's not sent to any server, not tracked by analytics, not shared with anyone. 
					It's yours. If you clear your browser data, it disappears. If you want to start fresh, 
					just clear your browser's local storage for this site.
				</p>
				
				<p>
					<strong>Why bother?</strong> Because reading is a journey, not a destination. These little data points 
					help you see patterns in your thinking, track your growth, and maybe discover which ideas 
					resonate most with where you are in life right now. It's not about surveillance — it's about 
					self-reflection through data.
				</p>
				
				<p>
					<strong>Your choice:</strong> You can disable this anytime by clearing your browser data. 
					The site works perfectly fine without it. But if you're curious about your reading habits 
					and want to see your journey mapped out, let it run. You might be surprised by what you discover about yourself.
				</p>
			</div>
		</div>
	</Container>
</PageLayout>

<style>
	.guided-path {
		padding: 2rem 0;
	}

	.chapters {
		max-width: 800px;
		margin: 0 auto;
	}

	.local-storage-info {
		max-width: 800px;
		margin: 4rem auto 0;
		padding: 2rem;
		background: rgb(var(--color-bg-alt));
		border-radius: 12px;
		border: 1px solid rgb(var(--color-border));
	}

	.local-storage-info h3 {
		font-size: 1.25rem;
		font-weight: 600;
		margin-bottom: 1rem;
		color: rgb(var(--color-text));
	}

	.local-storage-info p {
		margin-bottom: 1rem;
		line-height: 1.6;
		color: rgb(var(--color-text-muted));
	}

	.local-storage-info p:last-child {
		margin-bottom: 0;
	}

	.local-storage-info strong {
		color: rgb(var(--color-text));
		font-weight: 600;
	}
</style> 