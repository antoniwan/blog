---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Container from '../../components/Container.astro';
import PageHeader from '../../components/PageHeader.astro';
import { SITE_TITLE } from '../../consts';
---

<BaseLayout 
  title={`Public API - ${SITE_TITLE}`}
  description="Internal API for Stoic philosophy quotes, powering our 404 pages and future content features"
  path="/api"
>
  <Container>
    <Container maxWidth="container" padding="none">
      <PageHeader 
        title="Public API"
        description="Internal API for Stoic philosophy quotes, powering our 404 pages and future content features"
      />
      
      {/* API Overview */}
      <div class="bg-[rgb(var(--color-bg-alt))] rounded-lg border border-[rgb(var(--color-border))] p-6 mb-8">
        <div class="flex justify-between items-start mb-4">
          <h3 class="text-xl font-semibold text-[rgb(var(--color-text))]">Quotes API</h3>
          <a 
            href="https://github.com/antoniwan/curious-chaos-journal/blob/main/docs/QUOTES_API.md" 
            target="_blank" 
            rel="noopener noreferrer"
            class="text-sm text-blue-500 hover:text-blue-600 transition-colors flex items-center gap-1"
          >
            ðŸ“– Documentation
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
            </svg>
          </a>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 class="font-medium mb-2 text-[rgb(var(--color-text))]">Endpoint</h4>
            <code class="bg-[rgb(var(--color-bg))] px-3 py-2 rounded text-sm font-mono">GET /api/quotes</code>
            <p class="text-sm text-[rgb(var(--color-text-muted))] mt-2">
              Returns a random Stoic philosophy quote with rich metadata.
            </p>
          </div>
          <div>
            <h4 class="font-medium mb-2 text-[rgb(var(--color-text))]">Response Format</h4>
            <pre class="bg-[rgb(var(--color-bg))] p-4 rounded text-sm overflow-x-auto border border-[rgb(var(--color-border))]/30"><code>{`{
  "quote": {
    "id": 1,
    "text": "Quote text...",
    "author": "Author name",
    "work": "Work title",
    "themes": ["theme1", "theme2"],
    "difficulty": "beginner",
    "length": "short",
    "popularity": "high",
    "context": "Historical context",
    "modernRelevance": "Modern application"
  },
  "metadata": {
    "totalQuotes": 30,
    "version": "1.0",
    "lastUpdated": "2025-01-30",
    "description": "A random Stoic philosophy quote with rich metadata"
  }
}`}</code></pre>
          </div>
        </div>
      </div>

      {/* Usage Examples */}
      <div class="bg-[rgb(var(--color-bg-alt))] rounded-lg border border-[rgb(var(--color-border))] p-6 mb-8">
        <h3 class="text-xl font-semibold mb-4 text-[rgb(var(--color-text))]">Usage Examples</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 class="font-medium mb-2 text-[rgb(var(--color-text))]">JavaScript/Fetch</h4>
            <pre class="bg-[rgb(var(--color-bg))] p-4 rounded text-sm overflow-x-auto border border-[rgb(var(--color-border))]/30"><code>{`// Get a random quote
const response = await fetch('/api/quotes');
const data = await response.json();
console.log(data.quote.text);
console.log(\`By \${data.quote.author}\`);`}</code></pre>
          </div>
          <div>
            <h4 class="font-medium mb-2 text-[rgb(var(--color-text))]">Python/Requests</h4>
            <pre class="bg-[rgb(var(--color-bg))] p-4 rounded text-sm overflow-x-auto border border-[rgb(var(--color-border))]/30"><code>{`import requests

# Get a random quote
response = requests.get('https://your-site.com/api/quotes')
data = response.json()
print(data['quote']['text'])
print(f"By {data['quote']['author']}")`}</code></pre>
          </div>
        </div>
      </div>

      {/* Test the API */}
      <div class="bg-[rgb(var(--color-bg-alt))] rounded-lg border border-[rgb(var(--color-border))] p-6">
        <h3 class="text-xl font-semibold mb-4 text-[rgb(var(--color-text))]">Test the API</h3>
        <div class="mb-4">
          <button 
            id="testApi" 
            class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-medium transition-colors"
          >
            Get Random Quote
          </button>
        </div>
        <div id="apiResult" class="bg-[rgb(var(--color-bg))] p-4 rounded min-h-[200px] border border-[rgb(var(--color-border))]/30">
          <p class="text-[rgb(var(--color-text-muted))] text-sm">Click the button above to test the API...</p>
        </div>
      </div>
    </Container>
  </Container>
</BaseLayout>

<script>
  document.getElementById('testApi')?.addEventListener('click', async () => {
    const button = document.getElementById('testApi') as HTMLButtonElement;
    const resultDiv = document.getElementById('apiResult');
    
    if (!resultDiv) return;
    
    // Disable button and show loading
    button.disabled = true;
    button.textContent = 'Loading...';
    resultDiv.innerHTML = '<p class="text-[rgb(var(--color-text-muted))] text-sm">Loading...</p>';
    
    try {
      const response = await fetch('/api/quotes');
      const data = await response.json();
      
      if (data.error) {
        resultDiv.innerHTML = `<p class="text-red-500 text-sm">Error: ${data.message}</p>`;
        return;
      }
      
      const quote = data.quote;
      resultDiv.innerHTML = `
        <div class="space-y-4">
          <div class="p-4 bg-[rgb(var(--color-bg-alt))] rounded border-l-4 border-blue-500">
            <p class="italic text-lg mb-2">"${quote.text}"</p>
            <p class="text-sm text-[rgb(var(--color-text-muted))]">â€” ${quote.author}, ${quote.work}</p>
          </div>
          
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
            <div>
              <span class="font-medium">Difficulty:</span>
              <span class="text-[rgb(var(--color-text-muted))]">${quote.difficulty}</span>
            </div>
            <div>
              <span class="font-medium">Length:</span>
              <span class="text-[rgb(var(--color-text-muted))]">${quote.length}</span>
            </div>
            <div>
              <span class="font-medium">Popularity:</span>
              <span class="text-[rgb(var(--color-text-muted))]">${quote.popularity}</span>
            </div>
            <div>
              <span class="font-medium">Themes:</span>
              <span class="text-[rgb(var(--color-text-muted))]">${quote.themes.join(', ')}</span>
            </div>
          </div>
          
          ${quote.context ? `
            <div class="text-sm">
              <span class="font-medium">Context:</span>
              <span class="text-[rgb(var(--color-text-muted))]">${quote.context}</span>
            </div>
          ` : ''}
          
          ${quote.modernRelevance ? `
            <div class="text-sm">
              <span class="font-medium">Modern Relevance:</span>
              <span class="text-[rgb(var(--color-text-muted))]">${quote.modernRelevance}</span>
            </div>
          ` : ''}
          
          <div class="text-xs text-[rgb(var(--color-text-muted))] mt-4 pt-4 border-t border-[rgb(var(--color-border))]/30">
            <p>API Response Time: ${new Date().toLocaleTimeString()}</p>
            <p>Total Quotes Available: ${data.metadata.totalQuotes}</p>
          </div>
        </div>
      `;
    } catch (error) {
      resultDiv.innerHTML = `<p class="text-red-500 text-sm">Error: ${error instanceof Error ? error.message : 'Unknown error'}</p>`;
    } finally {
      // Re-enable button
      button.disabled = false;
      button.textContent = 'Get Random Quote';
    }
  });
</script> 