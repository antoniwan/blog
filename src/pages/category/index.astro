---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageHeader from '../../components/PageHeader.astro';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';
import { generateStructuredData } from '../../utils/structuredData';
import { generateKeywords } from '../../utils/seo';

// Get all posts
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Get post counts by category
const postCounts = categories.reduce((acc, category) => {
  acc[category.id] = posts.filter(post => post.data.category?.includes(category.id)).length;
  return acc;
}, {} as Record<string, number>);

// Generate structured data
const structuredData = generateStructuredData({
  title: 'Categories',
  description: 'Browse posts by category',
  path: '/category',
  type: 'website',
  author: 'Antoniwan'
});

// Auto-generate keywords
const keywords = generateKeywords([], categories.map(cat => cat.id));
---

<BaseLayout
  title="Categories"
  description="Browse posts by category"
  path="/category"
  keywords={keywords}
>
  <!-- Structured Data -->
  {Array.isArray(structuredData) ? 
    structuredData.map((schema, index) => (
      <script type="application/ld+json" set:html={JSON.stringify(schema)} />
    ))
    :
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  }
  
  <div class="w-full px-4 md:px-6 lg:px-8 xl:px-12">
    <div class="max-w-container mx-auto">
      <PageHeader 
        title="Categories"
        description="Browse posts by category"
      />
      
      {/* Categories Grid */}
      <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3 mt-12">
        {categories.map(category => (
          <a 
            href={`/category/${category.id}/`}
            class="block p-6 bg-neutral-50 dark:bg-neutral-900 rounded-lg hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors"
          >
            <h3 class="text-lg font-semibold mb-2">{category.name}</h3>
            <p class="text-sm text-neutral-600 dark:text-neutral-400 mb-4">
              {category.description}
            </p>
            <div class="flex items-center justify-between">
              <span class="text-sm text-neutral-500 dark:text-neutral-500">
                {postCounts[category.id] || 0} posts
              </span>
              <span class="text-primary-500 dark:text-primary-400">â†’</span>
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  /* Smooth transitions for dark mode */
  main {
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
        color 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    main {
      transition: none !important;
    }
  }
</style> 