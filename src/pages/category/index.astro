---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';

// Get all non-draft posts
const posts = await getCollection('blog', ({ data }) => !data.draft);

// Count posts per category
const categoryCounts = new Map<string, number>();
posts.forEach(post => {
  post.data.category?.forEach(cat => {
    categoryCounts.set(cat, (categoryCounts.get(cat) || 0) + 1);
  });
});

// Sort categories by post count
const sortedCategories = [...categories].sort((a, b) => {
  const countA = categoryCounts.get(a.id) || 0;
  const countB = categoryCounts.get(b.id) || 0;
  return countB - countA;
});
---

<BaseLayout title="Categories - StrongVault">
  <main class="max-w-5xl mx-auto px-4 md:px-8 py-12">
    <div class="text-center mb-16">
      <h1 class="text-4xl md:text-5xl font-bold mb-4 text-text dark:text-text-dark">Categories</h1>
      <p class="text-xl text-neutral-600 dark:text-neutral-400">Explore all content organized by category</p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {sortedCategories.map(category => {
        const postCount = categoryCounts.get(category.id) || 0;
        return (
          <a href={`/category/${category.id}/`} class="group bg-background dark:bg-background-dark p-6 rounded-lg border border-border/20 dark:border-border-dark/20 shadow-sm hover:shadow-md transition-all duration-300 hover:-translate-y-1">
            <div class="text-4xl mb-4">{category.icon}</div>
            <h2 class="text-xl font-semibold mb-2 text-text dark:text-text-dark group-hover:text-primary-500 dark:group-hover:text-primary-400">{category.name}</h2>
            <p class="text-neutral-600 dark:text-neutral-400 mb-4">{category.description}</p>
            <span class="inline-block px-3 py-1 bg-primary-500 dark:bg-primary-400 text-white text-sm font-medium rounded-full">{postCount} {postCount === 1 ? 'post' : 'posts'}</span>
          </a>
        );
      })}
    </div>
  </main>
</BaseLayout>

<style>
  /* Smooth transitions for dark mode */
  main {
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
                color 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    main {
      transition: none !important;
    }
  }
</style> 