---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageHeader from '../../components/PageHeader.astro';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';

// Get all posts
const posts = await getCollection('blog', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Get post counts by category
const postCounts = categories.reduce((acc, category) => {
  acc[category.id] = posts.filter(post => post.data.category?.includes(category.id)).length;
  return acc;
}, {} as Record<string, number>);
---

<BaseLayout
  title="Categories"
  description="Browse posts by category"
  path="/category"
  structuredDataType="website"
>
  <div class="w-full px-4 md:px-6 lg:px-8 xl:px-12">
    <div class="max-w-container mx-auto">
      <PageHeader 
        title="Categories"
        description="Browse posts by category"
      />
      
      {/* Categories Grid */}
      <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3 mt-12">
        {categories.map(category => (
          <a 
            href={`/category/${category.id}/`}
            class="block p-4 bg-neutral-50 dark:bg-neutral-900 rounded-lg hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors"
          >
            <h3 class="text-lg font-semibold mb-2 flex items-center gap-2">
              <span>{category.icon}</span>
              {category.name}
            </h3>
            <div class="flex items-center justify-between">
              <span class="text-sm text-neutral-500 dark:text-neutral-500">
                {postCounts[category.id]} posts
              </span>
              <span class="text-primary-500 dark:text-primary-400">â†’</span>
            </div>
          </a>
        ))}
      </div>
      
      {/* Empty State */}
      {categories.length === 0 && (
        <div class="text-center py-12">
          <p class="text-neutral-600 dark:text-neutral-400">
            No categories found yet.
          </p>
        </div>
      )}
    </div>
  </div>
</BaseLayout>

<style>
  /* Smooth transitions for dark mode */
  main {
    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
        color 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    main {
      transition: none !important;
    }
  }
</style> 