---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostCard from '../../components/PostCard.astro';
import PageHeader from '../../components/PageHeader.astro';
import StructuredData from '../../components/StructuredData.astro';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';
import { generateStructuredData } from '../../utils/structuredData';
import { generateKeywords } from '../../utils/seo';

export async function getStaticPaths() {
	return categories.map(category => ({
		params: { category: category.id },
		props: { category },
	}));
}

const { category } = Astro.props;

// Get all posts in this category
const posts = await getCollection('blog', ({ data }) => {
	return import.meta.env.PROD ? !data.draft : true;
});

// Filter posts by category
const categoryPosts = posts
	.filter(post => post.data.category?.includes(category.id))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Generate structured data
const structuredData = generateStructuredData({
	title: `${category.name} - Category`,
	description: `Browse all posts in the ${category.name} category`,
	path: `/category/${category.id}`,
	posts: categoryPosts,
	type: 'category',
	identifier: category.id,
	author: 'Antoniwan'
});

// Auto-generate keywords
const keywords = generateKeywords([], [category.id]);
---

<BaseLayout
	title={`${category.name} - Category`}
	description={`Browse all posts in the ${category.name} category`}
	path={`/category/${category.id}`}
	keywords={keywords}
>
	<!-- Structured Data -->
	<StructuredData data={structuredData} />
	
	<div class="w-full px-4 md:px-6 lg:px-8 xl:px-12">
		{/* Category Header */}
		<div class="max-w-container mx-auto">
			<PageHeader 
				title={`${category.icon} ${category.name}`}
				description={`Browse all posts in the ${category.name} category`}
			/>
			
			{/* Category Posts */}
			<div class="space-y-8 mt-12">
				{categoryPosts.map(post => (
					<PostCard post={post} />
				))}
			</div>
			
			{/* Empty State */}
			{categoryPosts.length === 0 && (
				<div class="text-center py-12">
					<p class="text-neutral-600 dark:text-neutral-400">
						No posts found in this category yet.
					</p>
				</div>
			)}
		</div>
	</div>
</BaseLayout>

<style>
	/* Smooth transitions for dark mode */
	main {
		transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
					color 300ms cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		main {
			transition: none !important;
		}
	}
</style> 