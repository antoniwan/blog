---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostCard from '../../components/PostCard.astro';
import PageHeader from '../../components/PageHeader.astro';
import Container from '../../components/Container.astro';
import { getCollection } from 'astro:content';
import { categories } from '../../data/categories';

export async function getStaticPaths() {
	return categories.map(category => ({
		params: { category: category.id },
		props: { category },
	}));
}

const { category } = Astro.props;

// Get all posts in this category
const posts = await getCollection('blog', ({ data }) => {
	return import.meta.env.PROD ? !data.draft : true;
});

// Filter posts by category and organize them
const categoryPosts = posts.filter(post => post.data.category?.includes(category.id));

// Separate posts where this category is primary vs secondary
const primaryCategoryPosts = categoryPosts
	.filter(post => post.data.category?.[0] === category.id)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const secondaryCategoryPosts = categoryPosts
	.filter(post => post.data.category?.[0] !== category.id && post.data.category?.includes(category.id))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<BaseLayout
	title={`${category.name} - Category`}
	description={`Browse all posts in the ${category.name} category`}
	path={`/category/${category.id}`}
	structuredDataType="category"
	structuredDataIdentifier={category.id}
	posts={categoryPosts}
>
	<Container>
		<Container maxWidth="container" padding="none">
			{/* Category Header */}
			<PageHeader 
				title={`${category.icon} ${category.name}`}
				description={`Browse all posts in the ${category.name} category`}
			/>
			
			{/* Primary Category Posts Section */}
			{primaryCategoryPosts.length > 0 && (
				<div class="mb-16 md:mb-20">
					<div class="space-y-8 md:space-y-10">
						{primaryCategoryPosts.map(post => (
							<PostCard post={post} />
						))}
					</div>
				</div>
			)}

			{/* Secondary Category Posts Section */}
			{secondaryCategoryPosts.length > 0 && (
				<div class="mb-16 md:mb-20">
					<div class="mb-8 md:mb-12">
						<h2 class="text-2xl md:text-3xl font-bold text-text dark:text-text-dark mb-4">
							Related {category.name} Posts
						</h2>
						<p class="text-lg text-neutral-600 dark:text-neutral-400 leading-relaxed">
							Posts that touch on {category.name} as a secondary topic
						</p>
					</div>
					<div class="space-y-8 md:space-y-10">
						{secondaryCategoryPosts.map(post => (
							<PostCard post={post} />
						))}
					</div>
				</div>
			)}
			
			{/* Empty State */}
			{categoryPosts.length === 0 && (
				<div class="text-center py-12">
					<p class="text-neutral-600 dark:text-neutral-400">
						No posts found in this category yet.
					</p>
				</div>
			)}
		</Container>
	</Container>
</BaseLayout>

<style>
	/* Smooth transitions for dark mode */
	main {
		transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
					color 300ms cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Enhanced spacing and typography */
	.text-lg {
		line-height: 1.7;
	}

	.text-xl {
		line-height: 1.6;
	}

	.text-2xl {
		line-height: 1.5;
	}

	.text-3xl {
		line-height: 1.4;
	}

	/* Enhanced spacing for better visual hierarchy */
	.space-y-8 > * + * {
		margin-top: 2rem;
	}

	.space-y-10 > * + * {
		margin-top: 2.5rem;
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		main {
			transition: none !important;
		}
	}

	/* Responsive typography adjustments */
	@media (max-width: 768px) {
		/* Tighter spacing on mobile */
		.space-y-8 > * + * {
			margin-top: 1.5rem;
		}

		.space-y-10 > * + * {
			margin-top: 2rem;
		}

		/* Mobile-specific spacing */
		.mb-16 {
			margin-bottom: 3rem;
		}

		.mb-20 {
			margin-bottom: 4rem;
		}
	}
</style> 