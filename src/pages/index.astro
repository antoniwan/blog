---
import BaseLayout from '../layouts/BaseLayout.astro';
import PostCard from '../components/PostCard.astro';
import PageSection from '../components/PageSection.astro';
import { getCollection } from 'astro:content';
import { categories } from '../data/categories';

// Get all posts
const posts = await getCollection('blog', ({ data }) => {
	return import.meta.env.PROD ? !data.draft : true;
});

// Sort posts by date
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Get post counts by category
const postCounts = categories.reduce((acc, category) => {
	acc[category.id] = posts.filter(post => post.data.category?.includes(category.id)).length;
	return acc;
}, {} as Record<string, number>);

// Get post counts by tag
const tagCounts = posts.reduce((acc, post) => {
	post.data.tags?.forEach(tag => {
		acc[tag] = (acc[tag] || 0) + 1;
	});
	return acc;
}, {} as Record<string, number>);
---

<BaseLayout
	title="Welcome to the Strong Vault"
	description="Notes on strength, clarity, ritual, and creation ‚Äî one builder's journey through code, craft, and self-mastery."
	layoutType="default"
	contentWidth="default"
	spacing="comfortable"
>
	{/* Hero Section */}
	<PageSection width="default" spacing="comfortable" class="text-center">
		<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-text dark:text-text-dark leading-tight tracking-tight">
			Welcome to the<br />Strong Vault
		</h1>
		<p class="text-xl md:text-2xl text-neutral-600 dark:text-neutral-400 leading-relaxed">
			Notes on strength, clarity, ritual, and creation ‚Äî one builder's journey through code, craft, and self-mastery.
		</p>
	</PageSection>

	{/* Featured Posts Section */}
	<PageSection width="default" spacing="default">
		<div class="space-y-6">
			<h2 class="text-2xl md:text-3xl font-bold text-text dark:text-text-dark">Featured Posts</h2>
			<div class="grid gap-8 md:gap-12">
				{sortedPosts.slice(0, 3).map(post => (
					<PostCard post={post} />
				))}
			</div>
		</div>
	</PageSection>

	{/* Categories Section */}
	<PageSection width="default" spacing="default">
		<div class="space-y-6">
			<h2 class="text-2xl md:text-3xl font-bold text-text dark:text-text-dark">Categories</h2>
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
				{categories.map(category => {
					const postCount = postCounts[category.id] || 0;
					return (
						<a
							href={`/category/${category.id}/`}
							class="flex items-center justify-between p-4 rounded-lg bg-background-alt hover:bg-background-alt/80 transition-colors"
						>
							<div class="flex items-center gap-3">
								<span class="text-2xl" aria-hidden="true">{category.icon}</span>
								<span class="font-medium text-text dark:text-text-dark">{category.name}</span>
							</div>
							<span class="text-sm text-text-muted">{postCount} {postCount === 1 ? 'post' : 'posts'}</span>
						</a>
					);
				})}
			</div>
		</div>
	</PageSection>

	{/* Popular Tags Section */}
	<PageSection width="default" spacing="default">
		<div class="space-y-6">
			<h2 class="text-2xl md:text-3xl font-bold text-text dark:text-text-dark">Popular Tags</h2>
			<div class="flex flex-wrap gap-2">
				{Object.entries(tagCounts)
					.sort(([, a], [, b]) => b - a)
					.slice(0, 10)
					.map(([tag, count]) => (
						<a
							href={`/tag/${tag}/`}
							class="flex items-center gap-1.5 text-sm px-3 py-1.5 rounded-full bg-zinc-100 dark:bg-zinc-800 text-gray-700 dark:text-gray-300 hover:bg-zinc-200 dark:hover:bg-zinc-700 transition-colors"
						>
							<span>üè∑Ô∏è</span>
							<span>{tag}</span>
							<span class="text-xs px-1.5 py-0.5 rounded-full bg-zinc-200 dark:bg-zinc-700 text-gray-600 dark:text-gray-400">{count}</span>
						</a>
					))}
			</div>
		</div>
	</PageSection>

	{/* Latest Posts Section */}
	<PageSection width="default" spacing="default">
		<div class="space-y-6">
			<h2 class="text-2xl md:text-3xl font-bold text-text dark:text-text-dark">Latest Posts</h2>
			<div class="grid gap-8 md:gap-12">
				{sortedPosts.slice(3, 6).map(post => (
					<PostCard post={post} />
				))}
			</div>
		</div>
	</PageSection>
</BaseLayout>

<style>
	/* Smooth transitions for dark mode */
	main {
		transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),
					color 300ms cubic-bezier(0.4, 0, 0.2, 1);
	}

	/* Respect reduced motion preferences */
	@media (prefers-reduced-motion: reduce) {
		main {
			transition: none !important;
		}
	}

	.hero-section {
		text-align: center;
		margin-bottom: var(--space-8);
		max-width: var(--content-width);
		margin-left: auto;
		margin-right: auto;
	}

	.hero-section h1 {
		font-size: var(--font-size-4xl);
		line-height: 1.2;
		margin: 0 0 var(--space-6) 0;
		font-weight: 800;
		letter-spacing: -0.025em;
		color: var(--text-color);
	}

	.subtitle {
		font-size: var(--font-size-xl);
		line-height: 1.6;
		color: var(--neutral-600);
		margin: 0;
	}

	.posts-grid {
		display: grid;
		gap: var(--space-8);
		max-width: var(--content-width);
		margin: 0 auto;
	}

	.post-card {
		background: var(--background-color);
		border-radius: 12px;
		padding: 2rem;
		transition: all 0.3s ease;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
		border: 1px solid var(--border-color);
	}

	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
		border-color: var(--primary-500);
	}

	.post-title-link {
		text-decoration: none;
		color: inherit;
		display: block;
		margin-bottom: 1rem;
	}

	.post-title-link:hover .post-title {
		color: var(--primary-500);
	}

	.post-meta {
		display: flex;
		align-items: center;
		gap: 1.5rem;
		margin-bottom: 1.25rem;
		font-size: 0.9375rem;
		color: var(--neutral-600);
		flex-wrap: wrap;
	}

	.post-title {
		font-size: 1.75rem;
		margin: 0 0 1rem 0;
		color: var(--text-color);
		line-height: 1.3;
		font-weight: 700;
	}

	.post-excerpt {
		margin: 0 0 1.5rem 0;
		color: var(--neutral-600);
		line-height: 1.6;
		font-size: 1.125rem;
	}

	.post-tags {
		display: flex;
		gap: 0.75rem;
		flex-wrap: wrap;
		margin-top: 1.5rem;
		padding-top: 1rem;
		border-top: 1px solid var(--border-color);
	}

	.tag {
		background: var(--neutral-100);
		color: var(--neutral-700);
		padding: 0.375rem 0.75rem;
		border-radius: 6px;
		font-size: 0.875rem;
		font-weight: 500;
		letter-spacing: 0.01em;
		text-transform: lowercase;
	}

	.category-badge {
		background: var(--primary-500);
		color: white;
		padding: 0.5rem 1rem;
		border-radius: 8px;
		font-size: 0.875rem;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		text-decoration: none;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(var(--primary-500), 0.3);
	}

	.category-badge:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 8px rgba(var(--primary-500), 0.4);
		filter: brightness(1.1);
	}

	.language-badge {
		background: var(--background-color);
		color: var(--neutral-600);
		padding: 0.375rem 0.75rem;
		border-radius: 6px;
		font-size: 0.875rem;
		font-weight: 500;
		border: 1px solid var(--border-color);
	}

	@media (max-width: 768px) {
		.hero-section h1 {
			font-size: var(--font-size-3xl);
		}

		.subtitle {
			font-size: var(--font-size-lg);
		}
	}
</style>
