---
import HomeLayout from '../layouts/HomeLayout.astro';
import PostCard from '../components/PostCard.astro';
import Section from '../components/Section.astro';
import { getCollection } from 'astro:content';
import { categories } from '../data/categories';

// Get all posts
const posts = await getCollection('blog', ({ data }) => {
	return import.meta.env.PROD ? !data.draft : true;
});

// Sort posts by date
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Get post counts by category
const postCounts = categories.reduce((acc, category) => {
	acc[category.id] = posts.filter(post => post.data.category?.includes(category.id)).length;
	return acc;
}, {} as Record<string, number>);

// Get post counts by tag
const tagCounts = posts.reduce((acc, post) => {
	post.data.tags?.forEach(tag => {
		acc[tag] = (acc[tag] || 0) + 1;
	});
	return acc;
}, {} as Record<string, number>);
---

<HomeLayout
	title="Welcome to the Strong Vault"
	description="Notes on strength, clarity, ritual, and creation — one builder's journey through code, craft, and self-mastery."
	contentWidth="default"
	spacing="comfortable"
>
	<Section>
		<h1>Welcome to the Strong Vault</h1>
		<p>Notes on strength, clarity, ritual, and creation — one builder's journey through code, craft, and self-mastery.</p>
	</Section>

	<Section>
		<nav>
			{sortedPosts.map(post => (
				<PostCard post={post} />
			))}
		</nav>
	</Section>

	<Section>
		<h2>Popular Tags</h2>
		<nav>
			{Object.entries(tagCounts)
				.sort(([, a], [, b]) => b - a)
				.slice(0, 10)
				.map(([tag, count]) => (
					<a href={`/tag/${tag}/`}>
						<span>🏷️</span>
						<span>{tag}</span>
						<span>{count}</span>
					</a>
				))}
		</nav>
	</Section>
</HomeLayout>
