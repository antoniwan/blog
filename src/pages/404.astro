---
import BaseLayout from '../layouts/BaseLayout.astro';
import Container from '../components/Container.astro';

// Fetch a random quote for the 404 page
let quote = null;
try {
  const response = await fetch(`${Astro.url.origin}/api/quotes`);
  if (response.ok) {
    const data = await response.json();
    quote = data.quote;
  }
} catch (error) {
  console.error('Failed to fetch quote:', error);
}
---

<BaseLayout
  title="404 - Page Not Found"
  description="The page you're looking for doesn't exist or has been moved."
>
  <Container>
    <Container maxWidth="container" padding="none">
      <div class="text-center py-12">
        <div class="max-w-4xl mx-auto">
          <div class="mb-8">
            <div class="text-6xl font-bold text-[rgb(var(--color-primary))] mb-4">
              404
            </div>
            <h1 class="text-heading text-[rgb(var(--color-text))] mb-4">
              Page Not Found
            </h1>
            <p class="text-body-large text-[rgb(var(--color-text-muted))] leading-relaxed mb-8">
              Oops! The page you're looking for doesn't exist or has been moved.
            </p>
          </div>

          {quote && (
            <div class="mb-12 p-8 bg-gradient-to-br from-[rgb(var(--color-accent)/0.1)] to-[rgb(var(--color-primary)/0.05)] rounded-xl border border-[rgb(var(--color-accent)/0.2)]">
              <div class="max-w-3xl mx-auto">
                <blockquote class="relative">
                  <div class="absolute -top-4 -left-4 text-6xl text-[rgb(var(--color-accent)/0.3)] font-serif">
                    "
                  </div>
                  <p class="text-2xl md:text-3xl font-medium text-[rgb(var(--color-text))] leading-relaxed mb-6 px-8 italic">
                    {quote.text}
                  </p>
                  <div class="absolute -bottom-4 -right-4 text-6xl text-[rgb(var(--color-accent)/0.3)] font-serif">
                    "
                  </div>
                </blockquote>
                
                <div class="mt-6 text-center">
                  <cite class="text-lg font-semibold text-[rgb(var(--color-accent))] not-italic">
                    — {quote.author}
                  </cite>
                  {quote.work && (
                    <div class="text-sm text-[rgb(var(--color-text-muted))] mt-1">
                      {quote.work}
                      {quote.book && `, ${quote.book}`}
                    </div>
                  )}
                  
                  {quote.context && (
                    <div class="mt-4 p-4 bg-[rgb(var(--color-background))] rounded-lg border border-[rgb(var(--color-border))]">
                      <h4 class="text-sm font-semibold text-[rgb(var(--color-text))] mb-2 uppercase tracking-wide">
                        Historical Context
                      </h4>
                      <p class="text-sm text-[rgb(var(--color-text-muted))] leading-relaxed">
                        {quote.context}
                      </p>
                    </div>
                  )}
                  
                  {quote.modernRelevance && (
                    <div class="mt-3 p-4 bg-[rgb(var(--color-background))] rounded-lg border border-[rgb(var(--color-border))]">
                      <h4 class="text-sm font-semibold text-[rgb(var(--color-text))] mb-2 uppercase tracking-wide">
                        Modern Relevance
                      </h4>
                      <p class="text-sm text-[rgb(var(--color-text-muted))] leading-relaxed">
                        {quote.modernRelevance}
                      </p>
                    </div>
                  )}
                  
                  <div class="mt-4 flex flex-wrap justify-center gap-2">
                    {quote.themes.map((theme: string) => (
                      <span class="px-3 py-1 text-xs font-medium bg-[rgb(var(--color-accent)/0.1)] text-[rgb(var(--color-accent))] rounded-full border border-[rgb(var(--color-accent)/0.2)]">
                        {theme}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          )}

          <div class="space-y-4">
            <a
              href="/"
              class="inline-flex items-center justify-center px-6 py-3 text-base font-medium rounded-md text-white bg-[rgb(var(--color-accent))] hover:bg-[rgb(var(--color-accent-hover))] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[rgb(var(--color-accent))] theme-transition leading-relaxed"
            >
              Return Home
            </a>
            
            <div class="text-base text-body-muted leading-relaxed">
              <a href="/category" class="link">
                Browse Categories
              </a>
              <span class="mx-2">•</span>
              <a href="/tag" class="link">
                Explore Tags
              </a>
            </div>
          </div>
        </div>
      </div>
    </Container>
  </Container>
</BaseLayout> 